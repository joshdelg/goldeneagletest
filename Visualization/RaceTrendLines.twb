<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0605.1023                               -->
<workbook original-version='18.1' source-build='2021.2.0 (20212.21.0605.1023)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='data2' inline='true' name='federated.1sajn4l1pseud01dgbmnu0cudq30' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data2' name='semistructpassivestore-direct.0vn7x181arktrt1gd4yzm1hms7bu'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/jspym/Desktop/Golden Eagle Test/getest' filename='data2.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data2.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.0vn7x181arktrt1gd4yzm1hms7bu' name='data2.json' table='[data2.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.0vn7x181arktrt1gd4yzm1hms7bu' name='data2.json' table='[data2.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data2.json].[Document Index (generated)]' />
          <map key='[name]' value='[data2.json].[times.Value.name]' />
          <map key='[pr]' value='[data2.json].[times.Value.pr]' />
          <map key='[school]' value='[data2.json].[times.Value.school]' />
          <map key='[time]' value='[data2.json].[times.Value.time]' />
          <map key='[times Index (generated)]' value='[data2.json].[times.Index (generated)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data2.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data2.json_D19CDE1A88804DACA98A58C60C8C882A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[times Index (generated)]</local-name>
            <parent-name>[data2.json]</parent-name>
            <remote-alias>times.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data2.json_D19CDE1A88804DACA98A58C60C8C882A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data2.json]</parent-name>
            <remote-alias>times.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data2.json_D19CDE1A88804DACA98A58C60C8C882A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.pr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pr]</local-name>
            <parent-name>[data2.json]</parent-name>
            <remote-alias>times.Value.pr</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data2.json_D19CDE1A88804DACA98A58C60C8C882A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[school]</local-name>
            <parent-name>[data2.json]</parent-name>
            <remote-alias>times.Value.school</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data2.json_D19CDE1A88804DACA98A58C60C8C882A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[data2.json]</parent-name>
            <remote-alias>times.Value.time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data2.json_D19CDE1A88804DACA98A58C60C8C882A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data2.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data2.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per times]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([times Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at times level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data2.json' datatype='table' name='[__tableau_internal_object_id__].[data2.json_D19CDE1A88804DACA98A58C60C8C882A]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pr' datatype='real' name='[pr]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.pr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.school</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>times.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Data2' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Times' role='dimensions'>
        <folder-item name='[name]' type='field' />
        <folder-item name='[school]' type='field' />
        <folder-item name='[times Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Data2'>
          <folder-item name='[Document Index (generated)]' type='field' />
        </folder>
        <folder name='Times'>
          <folder-item name='[name]' type='field' />
          <folder-item name='[school]' type='field' />
          <folder-item name='[times Index (generated)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data2.json' id='data2.json_D19CDE1A88804DACA98A58C60C8C882A'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0vn7x181arktrt1gd4yzm1hms7bu' name='data2.json' table='[data2.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data3' inline='true' name='federated.01vipwj0hq1f7v1fgvz2v1451sq2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data3' name='semistructpassivestore-direct.19tozww0ae9xoe1an7v7b1n7y46g'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/jspym/Desktop/Golden Eagle Test/getest' filename='data3.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data3.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.19tozww0ae9xoe1an7v7b1n7y46g' name='data3.json' table='[data3.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.19tozww0ae9xoe1an7v7b1n7y46g' name='data3.json' table='[data3.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data3.json].[Document Index (generated)]' />
          <map key='[isSr]' value='[data3.json].[times.Value.isSr]' />
          <map key='[name]' value='[data3.json].[times.Value.name]' />
          <map key='[pr]' value='[data3.json].[times.Value.pr]' />
          <map key='[readableTime]' value='[data3.json].[times.Value.readableTime]' />
          <map key='[school]' value='[data3.json].[times.Value.school]' />
          <map key='[time]' value='[data3.json].[times.Value.time]' />
          <map key='[times Index (generated)]' value='[data3.json].[times.Index (generated)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data3.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data3.json_73841C35932B428EAF983305B2978B22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[times Index (generated)]</local-name>
            <parent-name>[data3.json]</parent-name>
            <remote-alias>times.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data3.json_73841C35932B428EAF983305B2978B22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.isSr</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isSr]</local-name>
            <parent-name>[data3.json]</parent-name>
            <remote-alias>times.Value.isSr</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data3.json_73841C35932B428EAF983305B2978B22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data3.json]</parent-name>
            <remote-alias>times.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data3.json_73841C35932B428EAF983305B2978B22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.pr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pr]</local-name>
            <parent-name>[data3.json]</parent-name>
            <remote-alias>times.Value.pr</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data3.json_73841C35932B428EAF983305B2978B22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.readableTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[readableTime]</local-name>
            <parent-name>[data3.json]</parent-name>
            <remote-alias>times.Value.readableTime</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data3.json_73841C35932B428EAF983305B2978B22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[school]</local-name>
            <parent-name>[data3.json]</parent-name>
            <remote-alias>times.Value.school</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data3.json_73841C35932B428EAF983305B2978B22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[data3.json]</parent-name>
            <remote-alias>times.Value.time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data3.json_73841C35932B428EAF983305B2978B22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data3.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data3.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per times]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([times Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at times level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data3.json' datatype='table' name='[__tableau_internal_object_id__].[data3.json_73841C35932B428EAF983305B2978B22]' role='measure' type='quantitative' />
      <column caption='Is Sr' datatype='boolean' name='[isSr]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.isSr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pr' datatype='real' name='[pr]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.pr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.readableTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.school</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>times.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Data3' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Times' role='dimensions'>
        <folder-item name='[isSr]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[readableTime]' type='field' />
        <folder-item name='[school]' type='field' />
        <folder-item name='[times Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Data3'>
          <folder-item name='[Document Index (generated)]' type='field' />
        </folder>
        <folder name='Times'>
          <folder-item name='[isSr]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[readableTime]' type='field' />
          <folder-item name='[school]' type='field' />
          <folder-item name='[times Index (generated)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data3.json' id='data3.json_73841C35932B428EAF983305B2978B22'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.19tozww0ae9xoe1an7v7b1n7y46g' name='data3.json' table='[data3.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data4' inline='true' name='federated.015d84g0c83kjb163b3r50flwdsy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data4' name='semistructpassivestore-direct.0a6sipe174bj4w15za27w0p10qe1'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/jspym/Desktop/Golden Eagle Test/getest' filename='data4.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data4.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.0a6sipe174bj4w15za27w0p10qe1' name='data4.json' table='[data4.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.0a6sipe174bj4w15za27w0p10qe1' name='data4.json' table='[data4.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data4.json].[Document Index (generated)]' />
          <map key='[isSr]' value='[data4.json].[times.Value.isSr]' />
          <map key='[name]' value='[data4.json].[times.Value.name]' />
          <map key='[pr]' value='[data4.json].[times.Value.pr]' />
          <map key='[readableTime]' value='[data4.json].[times.Value.readableTime]' />
          <map key='[school]' value='[data4.json].[times.Value.school]' />
          <map key='[time]' value='[data4.json].[times.Value.time]' />
          <map key='[times Index (generated)]' value='[data4.json].[times.Index (generated)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data4.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data4.json_D5EB8B91026A4B769C1D187BCA8833B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[times Index (generated)]</local-name>
            <parent-name>[data4.json]</parent-name>
            <remote-alias>times.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data4.json_D5EB8B91026A4B769C1D187BCA8833B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.isSr</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isSr]</local-name>
            <parent-name>[data4.json]</parent-name>
            <remote-alias>times.Value.isSr</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data4.json_D5EB8B91026A4B769C1D187BCA8833B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data4.json]</parent-name>
            <remote-alias>times.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data4.json_D5EB8B91026A4B769C1D187BCA8833B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.pr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pr]</local-name>
            <parent-name>[data4.json]</parent-name>
            <remote-alias>times.Value.pr</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data4.json_D5EB8B91026A4B769C1D187BCA8833B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.readableTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[readableTime]</local-name>
            <parent-name>[data4.json]</parent-name>
            <remote-alias>times.Value.readableTime</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data4.json_D5EB8B91026A4B769C1D187BCA8833B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[school]</local-name>
            <parent-name>[data4.json]</parent-name>
            <remote-alias>times.Value.school</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data4.json_D5EB8B91026A4B769C1D187BCA8833B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[data4.json]</parent-name>
            <remote-alias>times.Value.time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data4.json_D5EB8B91026A4B769C1D187BCA8833B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data4.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data4.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per times]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([times Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at times level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data4.json' datatype='table' name='[__tableau_internal_object_id__].[data4.json_D5EB8B91026A4B769C1D187BCA8833B6]' role='measure' type='quantitative' />
      <column caption='Is Sr' datatype='boolean' name='[isSr]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.isSr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pr' datatype='real' name='[pr]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.pr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.readableTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.school</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>times.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Data4' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Times' role='dimensions'>
        <folder-item name='[isSr]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[readableTime]' type='field' />
        <folder-item name='[school]' type='field' />
        <folder-item name='[times Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Data4'>
          <folder-item name='[Document Index (generated)]' type='field' />
        </folder>
        <folder name='Times'>
          <folder-item name='[isSr]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[readableTime]' type='field' />
          <folder-item name='[school]' type='field' />
          <folder-item name='[times Index (generated)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data4.json' id='data4.json_D5EB8B91026A4B769C1D187BCA8833B6'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0a6sipe174bj4w15za27w0p10qe1' name='data4.json' table='[data4.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='avg_with_hitw' inline='true' name='federated.1marln5047poqi10wh0lo1skhwp4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avg_with_hitw' name='semistructpassivestore-direct.0qopaw50y45lz11bdw3710xtybuu'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/jspym/Desktop/Golden Eagle Test/getest' filename='avg_with_hitw.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[avg_with_hitw.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.0qopaw50y45lz11bdw3710xtybuu' name='avg_with_hitw.json' table='[avg_with_hitw.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.0qopaw50y45lz11bdw3710xtybuu' name='avg_with_hitw.json' table='[avg_with_hitw.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[avg_with_hitw.json].[Document Index (generated)]' />
          <map key='[avgTime]' value='[avg_with_hitw.json].[times.Value.avgTime]' />
          <map key='[isSr]' value='[avg_with_hitw.json].[times.Value.isSr]' />
          <map key='[name]' value='[avg_with_hitw.json].[times.Value.name]' />
          <map key='[readableTime]' value='[avg_with_hitw.json].[times.Value.readableTime]' />
          <map key='[school]' value='[avg_with_hitw.json].[times.Value.school]' />
          <map key='[time]' value='[avg_with_hitw.json].[times.Value.time]' />
          <map key='[times Index (generated)]' value='[avg_with_hitw.json].[times.Index (generated)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[times Index (generated)]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.avgTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgTime]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.avgTime</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.isSr</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isSr]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.isSr</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.readableTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[readableTime]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.readableTime</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[school]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.school</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per avg_with_hitw.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at avg_with_hitw.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per times]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([times Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at times level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='avg_with_hitw.json' datatype='table' name='[__tableau_internal_object_id__].[avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518]' role='measure' type='quantitative' />
      <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.avgTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Sr' datatype='boolean' name='[isSr]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.isSr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.readableTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.school</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>times.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Avg With Hitw' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Times' role='dimensions'>
        <folder-item name='[isSr]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[readableTime]' type='field' />
        <folder-item name='[school]' type='field' />
        <folder-item name='[times Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Avg With Hitw'>
          <folder-item name='[Document Index (generated)]' type='field' />
        </folder>
        <folder name='Times'>
          <folder-item name='[isSr]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[readableTime]' type='field' />
          <folder-item name='[school]' type='field' />
          <folder-item name='[times Index (generated)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_with_hitw.json' id='avg_with_hitw.json_B614003E394C481E91FA5DFF32DA3518'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0qopaw50y45lz11bdw3710xtybuu' name='avg_with_hitw.json' table='[avg_with_hitw.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='avg_before_hitw' inline='true' name='federated.0c3het81i9l2ew1azc8dr1majmmb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avg_before_hitw' name='semistructpassivestore-direct.0ot7mq510a43jb1ciqc6t1f5pxb7'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/jspym/Desktop/Golden Eagle Test/getest' filename='avg_before_hitw.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[avg_before_hitw.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.0ot7mq510a43jb1ciqc6t1f5pxb7' name='avg_before_hitw.json' table='[avg_before_hitw.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.0ot7mq510a43jb1ciqc6t1f5pxb7' name='avg_before_hitw.json' table='[avg_before_hitw.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[avg_before_hitw.json].[Document Index (generated)]' />
          <map key='[avgTime]' value='[avg_before_hitw.json].[times.Value.avgTime]' />
          <map key='[isSr]' value='[avg_before_hitw.json].[times.Value.isSr]' />
          <map key='[name]' value='[avg_before_hitw.json].[times.Value.name]' />
          <map key='[readableTime]' value='[avg_before_hitw.json].[times.Value.readableTime]' />
          <map key='[school]' value='[avg_before_hitw.json].[times.Value.school]' />
          <map key='[time]' value='[avg_before_hitw.json].[times.Value.time]' />
          <map key='[times Index (generated)]' value='[avg_before_hitw.json].[times.Index (generated)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[avg_before_hitw.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[times Index (generated)]</local-name>
            <parent-name>[avg_before_hitw.json]</parent-name>
            <remote-alias>times.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.avgTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgTime]</local-name>
            <parent-name>[avg_before_hitw.json]</parent-name>
            <remote-alias>times.Value.avgTime</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.isSr</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isSr]</local-name>
            <parent-name>[avg_before_hitw.json]</parent-name>
            <remote-alias>times.Value.isSr</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[avg_before_hitw.json]</parent-name>
            <remote-alias>times.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.readableTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[readableTime]</local-name>
            <parent-name>[avg_before_hitw.json]</parent-name>
            <remote-alias>times.Value.readableTime</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[school]</local-name>
            <parent-name>[avg_before_hitw.json]</parent-name>
            <remote-alias>times.Value.school</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[avg_before_hitw.json]</parent-name>
            <remote-alias>times.Value.time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per avg_before_hitw.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at avg_before_hitw.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per times]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([times Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at times level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='avg_before_hitw.json' datatype='table' name='[__tableau_internal_object_id__].[avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5]' role='measure' type='quantitative' />
      <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.avgTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Sr' datatype='boolean' name='[isSr]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.isSr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.readableTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.school</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>times.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Avg Before Hitw' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Times' role='dimensions'>
        <folder-item name='[isSr]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[readableTime]' type='field' />
        <folder-item name='[school]' type='field' />
        <folder-item name='[times Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Avg Before Hitw'>
          <folder-item name='[Document Index (generated)]' type='field' />
        </folder>
        <folder name='Times'>
          <folder-item name='[isSr]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[readableTime]' type='field' />
          <folder-item name='[school]' type='field' />
          <folder-item name='[times Index (generated)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_before_hitw.json' id='avg_before_hitw.json_DF67BBDB856E4C19BC52FC4DE596DAE5'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0ot7mq510a43jb1ciqc6t1f5pxb7' name='avg_before_hitw.json' table='[avg_before_hitw.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data5' inline='true' name='federated.0as2fhp13wsbng1ez4be81qma69a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data5' name='semistructpassivestore-direct.1ld0hvu0i8koh412krkit0l0zumm'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/jspym/Desktop/Golden Eagle Test/getest' filename='avg_with_hitw.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[avg_with_hitw.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
                <semistruct-schema table='[data5.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.1ld0hvu0i8koh412krkit0l0zumm' name='avg_with_hitw.json' table='[avg_with_hitw.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.1ld0hvu0i8koh412krkit0l0zumm' name='avg_with_hitw.json' table='[avg_with_hitw.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[avg_with_hitw.json].[Document Index (generated)]' />
          <map key='[avgTime]' value='[avg_with_hitw.json].[times.Value.avgTime]' />
          <map key='[isSr]' value='[avg_with_hitw.json].[times.Value.isSr]' />
          <map key='[name]' value='[avg_with_hitw.json].[times.Value.name]' />
          <map key='[readableTime]' value='[avg_with_hitw.json].[times.Value.readableTime]' />
          <map key='[school]' value='[avg_with_hitw.json].[times.Value.school]' />
          <map key='[time]' value='[avg_with_hitw.json].[times.Value.time]' />
          <map key='[times Index (generated)]' value='[avg_with_hitw.json].[times.Index (generated)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[times Index (generated)]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.avgTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgTime]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.avgTime</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.isSr</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isSr]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.isSr</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.readableTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[readableTime]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.readableTime</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[school]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.school</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[avg_with_hitw.json]</parent-name>
            <remote-alias>times.Value.time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Difference' datatype='real' name='[Calculation_902408843152199680]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[time]-[avgTime]' />
      </column>
      <column caption='Drop Percentage' datatype='real' name='[Calculation_902408843153469442]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([time]-[avgTime])/[avgTime])*100' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='avg_with_hitw.json' datatype='table' name='[__tableau_internal_object_id__].[avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2]' role='measure' type='quantitative' />
      <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.avgTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Sr' datatype='boolean' name='[isSr]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.isSr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.readableTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.school</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>times.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Avg With Hitw' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Times' role='dimensions'>
        <folder-item name='[isSr]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[readableTime]' type='field' />
        <folder-item name='[school]' type='field' />
        <folder-item name='[times Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Avg With Hitw'>
          <folder-item name='[Document Index (generated)]' type='field' />
        </folder>
        <folder name='Data5' />
        <folder name='Times'>
          <folder-item name='[isSr]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[readableTime]' type='field' />
          <folder-item name='[school]' type='field' />
          <folder-item name='[times Index (generated)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_with_hitw.json' id='avg_with_hitw.json_D3533ED530FA4766BA1F29D35167FFC2'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1ld0hvu0i8koh412krkit0l0zumm' name='avg_with_hitw.json' table='[avg_with_hitw.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='avg_bi' inline='true' name='federated.12xugqo0esrp1e1gke4iz055kujr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avg_bi' name='semistructpassivestore-direct.1jhf08j0llrk371eiga6i1o2x3jo'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/jspym/Desktop/Golden Eagle Test/getest' filename='avg_bi.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[avg_bi.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.1jhf08j0llrk371eiga6i1o2x3jo' name='avg_bi.json' table='[avg_bi.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.1jhf08j0llrk371eiga6i1o2x3jo' name='avg_bi.json' table='[avg_bi.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[avg_bi.json].[Document Index (generated)]' />
          <map key='[avgTime]' value='[avg_bi.json].[times.Value.avgTime]' />
          <map key='[isSr]' value='[avg_bi.json].[times.Value.isSr]' />
          <map key='[name]' value='[avg_bi.json].[times.Value.name]' />
          <map key='[readableTime]' value='[avg_bi.json].[times.Value.readableTime]' />
          <map key='[school]' value='[avg_bi.json].[times.Value.school]' />
          <map key='[time]' value='[avg_bi.json].[times.Value.time]' />
          <map key='[times Index (generated)]' value='[avg_bi.json].[times.Index (generated)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[avg_bi.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_bi.json_E254E7B248F345ED8C20083B57BCA906]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[times Index (generated)]</local-name>
            <parent-name>[avg_bi.json]</parent-name>
            <remote-alias>times.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_bi.json_E254E7B248F345ED8C20083B57BCA906]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.avgTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgTime]</local-name>
            <parent-name>[avg_bi.json]</parent-name>
            <remote-alias>times.Value.avgTime</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_bi.json_E254E7B248F345ED8C20083B57BCA906]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.isSr</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isSr]</local-name>
            <parent-name>[avg_bi.json]</parent-name>
            <remote-alias>times.Value.isSr</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_bi.json_E254E7B248F345ED8C20083B57BCA906]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[avg_bi.json]</parent-name>
            <remote-alias>times.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_bi.json_E254E7B248F345ED8C20083B57BCA906]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.readableTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[readableTime]</local-name>
            <parent-name>[avg_bi.json]</parent-name>
            <remote-alias>times.Value.readableTime</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_bi.json_E254E7B248F345ED8C20083B57BCA906]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[school]</local-name>
            <parent-name>[avg_bi.json]</parent-name>
            <remote-alias>times.Value.school</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_bi.json_E254E7B248F345ED8C20083B57BCA906]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[avg_bi.json]</parent-name>
            <remote-alias>times.Value.time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_bi.json_E254E7B248F345ED8C20083B57BCA906]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per avg_bi.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at avg_bi.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per times]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([times Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at times level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='avg_bi.json' datatype='table' name='[__tableau_internal_object_id__].[avg_bi.json_E254E7B248F345ED8C20083B57BCA906]' role='measure' type='quantitative' />
      <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.avgTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Sr' datatype='boolean' name='[isSr]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.isSr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.readableTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.school</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>times.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Avg Bi' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Times' role='dimensions'>
        <folder-item name='[isSr]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[readableTime]' type='field' />
        <folder-item name='[school]' type='field' />
        <folder-item name='[times Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Avg Bi'>
          <folder-item name='[Document Index (generated)]' type='field' />
        </folder>
        <folder name='Times'>
          <folder-item name='[isSr]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[readableTime]' type='field' />
          <folder-item name='[school]' type='field' />
          <folder-item name='[times Index (generated)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_bi.json' id='avg_bi.json_E254E7B248F345ED8C20083B57BCA906'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1jhf08j0llrk371eiga6i1o2x3jo' name='avg_bi.json' table='[avg_bi.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='avg_no_hitw' inline='true' name='federated.1kmffby0ov3f9419bs6771r3s02o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avg_no_hitw' name='semistructpassivestore-direct.0p4czcy19erkvm1baeawf1ozomtb'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/jspym/Desktop/Golden Eagle Test/getest' filename='avg_no_hitw.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[avg_no_hitw.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.0p4czcy19erkvm1baeawf1ozomtb' name='avg_no_hitw.json' table='[avg_no_hitw.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.0p4czcy19erkvm1baeawf1ozomtb' name='avg_no_hitw.json' table='[avg_no_hitw.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[avg_no_hitw.json].[Document Index (generated)]' />
          <map key='[avgTime]' value='[avg_no_hitw.json].[times.Value.avgTime]' />
          <map key='[isSr]' value='[avg_no_hitw.json].[times.Value.isSr]' />
          <map key='[name]' value='[avg_no_hitw.json].[times.Value.name]' />
          <map key='[readableTime]' value='[avg_no_hitw.json].[times.Value.readableTime]' />
          <map key='[school]' value='[avg_no_hitw.json].[times.Value.school]' />
          <map key='[time]' value='[avg_no_hitw.json].[times.Value.time]' />
          <map key='[times Index (generated)]' value='[avg_no_hitw.json].[times.Index (generated)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[avg_no_hitw.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[times Index (generated)]</local-name>
            <parent-name>[avg_no_hitw.json]</parent-name>
            <remote-alias>times.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.avgTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avgTime]</local-name>
            <parent-name>[avg_no_hitw.json]</parent-name>
            <remote-alias>times.Value.avgTime</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.isSr</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isSr]</local-name>
            <parent-name>[avg_no_hitw.json]</parent-name>
            <remote-alias>times.Value.isSr</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[avg_no_hitw.json]</parent-name>
            <remote-alias>times.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.readableTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[readableTime]</local-name>
            <parent-name>[avg_no_hitw.json]</parent-name>
            <remote-alias>times.Value.readableTime</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[school]</local-name>
            <parent-name>[avg_no_hitw.json]</parent-name>
            <remote-alias>times.Value.school</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[avg_no_hitw.json]</parent-name>
            <remote-alias>times.Value.time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Diff Percent' datatype='real' name='[Calculation_1408500851659386880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([time]-[avgTime])/[avgTime])*100' />
      </column>
      <column caption='Diff Time' datatype='real' name='[Calculation_1408500851659649025]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[time]-[avgTime]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per avg_no_hitw.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at avg_no_hitw.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per times]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([times Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at times level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='avg_no_hitw.json' datatype='table' name='[__tableau_internal_object_id__].[avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79]' role='measure' type='quantitative' />
      <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.avgTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Sr' datatype='boolean' name='[isSr]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.isSr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.readableTime</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.school</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>times.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Avg No Hitw' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Times' role='dimensions'>
        <folder-item name='[isSr]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[readableTime]' type='field' />
        <folder-item name='[school]' type='field' />
        <folder-item name='[times Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Avg No Hitw'>
          <folder-item name='[Document Index (generated)]' type='field' />
        </folder>
        <folder name='Times'>
          <folder-item name='[isSr]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[readableTime]' type='field' />
          <folder-item name='[school]' type='field' />
          <folder-item name='[times Index (generated)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_no_hitw.json' id='avg_no_hitw.json_C26D52129E1C4C8D89516EA925028C79'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0p4czcy19erkvm1baeawf1ozomtb' name='avg_no_hitw.json' table='[avg_no_hitw.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data' inline='true' name='federated.02vzxo0127x2gu1f8mcqi1r0nrxs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='semistructpassivestore-direct.006fiac0tsz8t71coye9m19d84to'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/jspym/Desktop/Golden Eagle Test/getest' filename='data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data.json]'>
                  <map key='times' value='true' />
                  <map key='times.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.006fiac0tsz8t71coye9m19d84to' name='data.json' table='[data.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.006fiac0tsz8t71coye9m19d84to' name='data.json' table='[data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data.json].[Document Index (generated)]' />
          <map key='[name]' value='[data.json].[times.Value.name]' />
          <map key='[pr]' value='[data.json].[times.Value.pr]' />
          <map key='[school]' value='[data.json].[times.Value.school]' />
          <map key='[time]' value='[data.json].[times.Value.time]' />
          <map key='[times Index (generated)]' value='[data.json].[times.Index (generated)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.json_B9BF1C058BD845BD9BFC8E49E06DD76A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[times Index (generated)]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>times.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.json_B9BF1C058BD845BD9BFC8E49E06DD76A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>times.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.json_B9BF1C058BD845BD9BFC8E49E06DD76A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.pr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pr]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>times.Value.pr</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.json_B9BF1C058BD845BD9BFC8E49E06DD76A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.school</remote-name>
            <remote-type>130</remote-type>
            <local-name>[school]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>times.Value.school</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.json_B9BF1C058BD845BD9BFC8E49E06DD76A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>times.Value.time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>times.Value.time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.json_B9BF1C058BD845BD9BFC8E49E06DD76A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per times]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([times Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at times level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data.json' datatype='table' name='[__tableau_internal_object_id__].[data.json_B9BF1C058BD845BD9BFC8E49E06DD76A]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pr' datatype='real' name='[pr]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.pr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>times.Value.school</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>times.Value.time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>times.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='Data' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Times' role='dimensions'>
        <folder-item name='[name]' type='field' />
        <folder-item name='[school]' type='field' />
        <folder-item name='[times Index (generated)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
        </folder>
        <folder name='Times'>
          <folder-item name='[name]' type='field' />
          <folder-item name='[school]' type='field' />
          <folder-item name='[times Index (generated)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:school:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bothell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Issaquah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;O&apos;Dea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abbotsford Christian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Forest Grove&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mercer Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sultan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bellevue Christian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hazen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mt Rainier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kingston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jesuit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Port Angeles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hockinson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mt Si&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Anchorage&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eisenhower&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skyline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin (WA)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mira Costa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eastlake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lakeside (Seattle)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bishop Blanchet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Inglemoor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mt Vernon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Linn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia River&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Klahowya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rogers (Puyallup)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dimond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lake Stevens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sage Creek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eastmont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sir Charles Tupper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ellensburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Squalicum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cascade (Leavenworth)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Juneau-Douglas Yadaa.at Kale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Port Townsend (East Jefferson)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ingraham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Newport (Bellevue)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodinville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Auburn Mountainview&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tahoma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eagle River&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Washington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sedro-Woolley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cashmere&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kentridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glacier Peak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mountlake Terrace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vista Murrieta&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.json' id='data.json_B9BF1C058BD845BD9BFC8E49E06DD76A'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.006fiac0tsz8t71coye9m19d84to' name='data.json' table='[data.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average Drop Overall'>
      <table>
        <view>
          <datasources>
            <datasource caption='data5' name='federated.0as2fhp13wsbng1ez4be81qma69a' />
          </datasources>
          <datasource-dependencies datasource='federated.0as2fhp13wsbng1ez4be81qma69a'>
            <column caption='Difference' datatype='real' name='[Calculation_902408843152199680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[time]-[avgTime]' />
            </column>
            <column caption='Drop Percentage' datatype='real' name='[Calculation_902408843153469442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([time]-[avgTime])/[avgTime])*100' />
            </column>
            <column-instance column='[Calculation_902408843152199680]' derivation='Avg' name='[avg:Calculation_902408843152199680:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_902408843153469442]' derivation='Avg' name='[avg:Calculation_902408843153469442:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.avgTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0as2fhp13wsbng1ez4be81qma69a].[avg:Calculation_902408843152199680:qk]' />
              <text column='[federated.0as2fhp13wsbng1ez4be81qma69a].[avg:Calculation_902408843153469442:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{137BE941-64C7-44A6-8E35-C4A6AC359A6F}' />
    </worksheet>
    <worksheet name='Average Drop by School'>
      <table>
        <view>
          <datasources>
            <datasource caption='data5' name='federated.0as2fhp13wsbng1ez4be81qma69a' />
          </datasources>
          <datasource-dependencies datasource='federated.0as2fhp13wsbng1ez4be81qma69a'>
            <column caption='Difference' datatype='real' name='[Calculation_902408843152199680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[time]-[avgTime]' />
            </column>
            <column caption='Drop Percentage' datatype='real' name='[Calculation_902408843153469442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([time]-[avgTime])/[avgTime])*100' />
            </column>
            <column-instance column='[Calculation_902408843152199680]' derivation='Avg' name='[avg:Calculation_902408843152199680:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_902408843153469442]' derivation='Avg' name='[avg:Calculation_902408843153469442:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.avgTime</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Bothell&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Eastlake&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Eisenhower&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Inglemoor&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Issaquah&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Mt Si&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Newport (Bellevue)&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Redmond&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Skyline&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Woodinville&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0as2fhp13wsbng1ez4be81qma69a].[avg:Calculation_902408843152199680:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0as2fhp13wsbng1ez4be81qma69a].[avg:Calculation_902408843153469442:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0as2fhp13wsbng1ez4be81qma69a].[avg:Calculation_902408843152199680:qk] + [federated.0as2fhp13wsbng1ez4be81qma69a].[avg:Calculation_902408843153469442:qk])</rows>
        <cols>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]</cols>
      </table>
      <simple-id uuid='{963928B8-9664-4CF5-8F04-4147FC9DA380}' />
    </worksheet>
    <worksheet name='Avg Drop by School (Without HitW)'>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_no_hitw' name='federated.1kmffby0ov3f9419bs6771r3s02o' />
          </datasources>
          <datasource-dependencies datasource='federated.1kmffby0ov3f9419bs6771r3s02o'>
            <column caption='Avg Diff Percent' datatype='real' name='[Calculation_1408500851659386880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([time]-[avgTime])/[avgTime])*100' />
            </column>
            <column caption='Diff Time' datatype='real' name='[Calculation_1408500851659649025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[time]-[avgTime]' />
            </column>
            <column-instance column='[Calculation_1408500851659386880]' derivation='Avg' name='[avg:Calculation_1408500851659386880:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1408500851659649025]' derivation='Avg' name='[avg:Calculation_1408500851659649025:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.avgTime</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Bothell&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Eastlake&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Eisenhower&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Inglemoor&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Issaquah&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Mt Si&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Newport (Bellevue)&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Redmond&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Skyline&quot;' />
              <groupfilter function='member' level='[none:school:nk]' member='&quot;Woodinville&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kmffby0ov3f9419bs6771r3s02o].[avg:Calculation_1408500851659649025:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kmffby0ov3f9419bs6771r3s02o].[avg:Calculation_1408500851659386880:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1kmffby0ov3f9419bs6771r3s02o].[avg:Calculation_1408500851659649025:qk] + [federated.1kmffby0ov3f9419bs6771r3s02o].[avg:Calculation_1408500851659386880:qk])</rows>
        <cols>[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]</cols>
      </table>
      <simple-id uuid='{01D67B31-D416-41E5-A944-6B3CEB43F247}' />
    </worksheet>
    <worksheet name='Bellevue Invite JV'>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_bi' name='federated.12xugqo0esrp1e1gke4iz055kujr' />
          </datasources>
          <datasource-dependencies datasource='federated.12xugqo0esrp1e1gke4iz055kujr'>
            <column-instance column='[readableTime]' derivation='Attribute' name='[attr:readableTime:nk]' pivot='key' type='nominal' />
            <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.avgTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column-instance column='[times Index (generated)]' derivation='None' name='[none:times Index (generated):ok]' pivot='key' type='ordinal' />
            <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.readableTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[avgTime]' derivation='Sum' name='[sum:avgTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>times.Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12xugqo0esrp1e1gke4iz055kujr].[none:school:nk]'>
            <groupfilter function='level-members' level='[none:school:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12xugqo0esrp1e1gke4iz055kujr].[none:school:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.12xugqo0esrp1e1gke4iz055kujr].[sum:avgTime:qk]' field-type='quantitative' max='1800.0' min='960.0' range-type='fixed' reverse='true' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.12xugqo0esrp1e1gke4iz055kujr].[sum:time:qk]' field-type='quantitative' max='1800.0' min='960.0' range-type='fixed' reverse='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12xugqo0esrp1e1gke4iz055kujr].[none:school:nk]' />
              <text column='[federated.12xugqo0esrp1e1gke4iz055kujr].[none:name:nk]' />
              <tooltip column='[federated.12xugqo0esrp1e1gke4iz055kujr].[attr:readableTime:nk]' />
              <lod column='[federated.12xugqo0esrp1e1gke4iz055kujr].[none:times Index (generated):ok]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.12xugqo0esrp1e1gke4iz055kujr].[none:school:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12xugqo0esrp1e1gke4iz055kujr].[sum:time:qk]</rows>
        <cols>[federated.12xugqo0esrp1e1gke4iz055kujr].[sum:avgTime:qk]</cols>
      </table>
      <simple-id uuid='{A2426265-184B-412E-A284-54C374612654}' />
    </worksheet>
    <worksheet name='Bellevue Varisty 5/6'>
      <table>
        <view>
          <datasources>
            <datasource caption='data2' name='federated.1sajn4l1pseud01dgbmnu0cudq30' />
          </datasources>
          <datasource-dependencies datasource='federated.1sajn4l1pseud01dgbmnu0cudq30'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column-instance column='[times Index (generated)]' derivation='None' name='[none:times Index (generated):ok]' pivot='key' type='ordinal' />
            <column caption='Pr' datatype='real' name='[pr]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.pr</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[pr]' derivation='Sum' name='[sum:pr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>times.Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1sajn4l1pseud01dgbmnu0cudq30].[sum:pr:qk]' field-type='quantitative' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1sajn4l1pseud01dgbmnu0cudq30].[sum:time:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sajn4l1pseud01dgbmnu0cudq30].[none:school:nk]' />
              <text column='[federated.1sajn4l1pseud01dgbmnu0cudq30].[none:name:nk]' />
              <lod column='[federated.1sajn4l1pseud01dgbmnu0cudq30].[none:times Index (generated):ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.1sajn4l1pseud01dgbmnu0cudq30].[none:school:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sajn4l1pseud01dgbmnu0cudq30].[sum:time:qk]</rows>
        <cols>[federated.1sajn4l1pseud01dgbmnu0cudq30].[sum:pr:qk]</cols>
      </table>
      <simple-id uuid='{272655FA-C1B7-4690-ADE4-FD78FAA7B8E8}' />
    </worksheet>
    <worksheet name='HitW (Avg times before)'>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_before_hitw' name='federated.0c3het81i9l2ew1azc8dr1majmmb' />
          </datasources>
          <datasource-dependencies datasource='federated.0c3het81i9l2ew1azc8dr1majmmb'>
            <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.avgTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column-instance column='[times Index (generated)]' derivation='None' name='[none:times Index (generated):ok]' pivot='key' type='ordinal' />
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[avgTime]' derivation='Sum' name='[sum:avgTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>times.Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0c3het81i9l2ew1azc8dr1majmmb].[sum:time:qk]' field-type='quantitative' max='1300.0' min='860.0' range-type='fixed' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0c3het81i9l2ew1azc8dr1majmmb].[sum:avgTime:qk]' field-type='quantitative' max='1300.0' min='860.0' range-type='fixed' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c3het81i9l2ew1azc8dr1majmmb].[none:school:nk]' />
              <text column='[federated.0c3het81i9l2ew1azc8dr1majmmb].[none:name:nk]' />
              <lod column='[federated.0c3het81i9l2ew1azc8dr1majmmb].[none:times Index (generated):ok]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.0c3het81i9l2ew1azc8dr1majmmb].[none:school:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c3het81i9l2ew1azc8dr1majmmb].[sum:time:qk]</rows>
        <cols>[federated.0c3het81i9l2ew1azc8dr1majmmb].[sum:avgTime:qk]</cols>
      </table>
      <simple-id uuid='{E0B36330-AE13-4CD7-ADB0-B32D33504763}' />
    </worksheet>
    <worksheet name='HitW Avg (Without HitW)'>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_no_hitw' name='federated.1kmffby0ov3f9419bs6771r3s02o' />
          </datasources>
          <datasource-dependencies datasource='federated.1kmffby0ov3f9419bs6771r3s02o'>
            <column-instance column='[readableTime]' derivation='Attribute' name='[attr:readableTime:nk]' pivot='key' type='nominal' />
            <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.avgTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column-instance column='[times Index (generated)]' derivation='None' name='[none:times Index (generated):ok]' pivot='key' type='ordinal' />
            <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.readableTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[avgTime]' derivation='Sum' name='[sum:avgTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>times.Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]'>
            <groupfilter function='level-members' level='[none:school:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1kmffby0ov3f9419bs6771r3s02o].[sum:avgTime:qk]' field-type='quantitative' max='1300.0' min='880.0' range-type='fixed' reverse='true' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1kmffby0ov3f9419bs6771r3s02o].[sum:time:qk]' field-type='quantitative' max='1300.0' min='880.0' range-type='fixed' reverse='true' scope='rows' type='space' />
            <format attr='height' field='[federated.1kmffby0ov3f9419bs6771r3s02o].[sum:avgTime:qk]' value='53' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]' />
              <tooltip column='[federated.1kmffby0ov3f9419bs6771r3s02o].[attr:readableTime:nk]' />
              <text column='[federated.1kmffby0ov3f9419bs6771r3s02o].[none:name:nk]' />
              <lod column='[federated.1kmffby0ov3f9419bs6771r3s02o].[none:times Index (generated):ok]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kmffby0ov3f9419bs6771r3s02o].[sum:time:qk]</rows>
        <cols>[federated.1kmffby0ov3f9419bs6771r3s02o].[sum:avgTime:qk]</cols>
      </table>
      <simple-id uuid='{53470BF3-66F3-450D-BF58-66A232B3CB2D}' />
    </worksheet>
    <worksheet name='Hole in the Wall'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.02vzxo0127x2gu1f8mcqi1r0nrxs' />
          </datasources>
          <datasource-dependencies datasource='federated.02vzxo0127x2gu1f8mcqi1r0nrxs'>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column-instance column='[times Index (generated)]' derivation='None' name='[none:times Index (generated):ok]' pivot='key' type='ordinal' />
            <column caption='Pr' datatype='real' name='[pr]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.pr</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[pr]' derivation='Sum' name='[sum:pr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>times.Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:school:nk]'>
            <groupfilter function='level-members' level='[none:school:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:school:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[sum:pr:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[sum:time:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:school:nk]' />
              <text column='[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[attr:name:nk]' />
              <lod column='[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:times Index (generated):ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:school:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[sum:time:qk]</rows>
        <cols>[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[sum:pr:qk]</cols>
      </table>
      <simple-id uuid='{E5950D15-C571-41B2-A1F7-9CC92023AFBE}' />
    </worksheet>
    <worksheet name='Hole in the Wall Average'>
      <table>
        <view>
          <datasources>
            <datasource caption='data5' name='federated.0as2fhp13wsbng1ez4be81qma69a' />
          </datasources>
          <datasource-dependencies datasource='federated.0as2fhp13wsbng1ez4be81qma69a'>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[readableTime]' derivation='Attribute' name='[attr:readableTime:nk]' pivot='key' type='nominal' />
            <column caption='Avg Time' datatype='real' name='[avgTime]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.avgTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column-instance column='[times Index (generated)]' derivation='None' name='[none:times Index (generated):ok]' pivot='key' type='ordinal' />
            <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.readableTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[avgTime]' derivation='Sum' name='[sum:avgTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>times.Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]'>
            <groupfilter function='level-members' level='[none:school:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0as2fhp13wsbng1ez4be81qma69a].[sum:time:qk]' field-type='quantitative' max='1300.0' min='870.0' range-type='fixed' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0as2fhp13wsbng1ez4be81qma69a].[sum:avgTime:qk]' field-type='quantitative' max='1300.0' min='870.0' range-type='fixed' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]' />
              <text column='[federated.0as2fhp13wsbng1ez4be81qma69a].[none:name:nk]' />
              <lod column='[federated.0as2fhp13wsbng1ez4be81qma69a].[none:times Index (generated):ok]' />
              <tooltip column='[federated.0as2fhp13wsbng1ez4be81qma69a].[attr:name:nk]' />
              <tooltip column='[federated.0as2fhp13wsbng1ez4be81qma69a].[attr:readableTime:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0as2fhp13wsbng1ez4be81qma69a].[sum:time:qk]</rows>
        <cols>[federated.0as2fhp13wsbng1ez4be81qma69a].[sum:avgTime:qk]</cols>
      </table>
      <simple-id uuid='{AE720C6C-51F6-4D56-A44C-B44D55F3D05D}' />
    </worksheet>
    <worksheet name='Inglemoor'>
      <table>
        <view>
          <datasources>
            <datasource caption='data3' name='federated.01vipwj0hq1f7v1fgvz2v1451sq2' />
          </datasources>
          <datasource-dependencies datasource='federated.01vipwj0hq1f7v1fgvz2v1451sq2'>
            <column caption='(1.07027*[Pr]-51.0496)/60' datatype='real' name='[Calculation_1148980917534433283]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='(1.07027*[pr]-51.0496)/60' />
            </column>
            <column-instance column='[readableTime]' derivation='Attribute' name='[attr:readableTime:nk]' pivot='key' type='nominal' />
            <column-instance column='[time]' derivation='Attribute' name='[attr:time:qk]' pivot='key' type='quantitative' />
            <column caption='Is Sr' datatype='boolean' name='[isSr]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.isSr</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[isSr]' derivation='None' name='[none:isSr:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column-instance column='[times Index (generated)]' derivation='None' name='[none:times Index (generated):ok]' pivot='key' type='ordinal' />
            <column caption='Pr' datatype='real' name='[pr]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.pr</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.readableTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1148980917534433283]' derivation='Sum' name='[sum:Calculation_1148980917534433283:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pr]' derivation='Sum' name='[sum:pr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>times.Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[attr:time:qk]' included-values='in-range'>
            <min>953.79999999999995</min>
            <max>484437.0</max>
          </filter>
          <slices>
            <column>[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[attr:time:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[sum:pr:qk]' field-type='quantitative' max='1400.0' min='930.0' range-type='fixed' reverse='true' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[sum:time:qk]' field-type='quantitative' max='1400.0' min='930.0' range-type='fixed' reverse='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:school:nk]' />
              <shape column='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:isSr:nk]' />
              <tooltip column='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[attr:readableTime:nk]' />
              <text column='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:name:nk]' />
              <lod column='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:times Index (generated):ok]' />
              <tooltip column='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[sum:Calculation_1148980917534433283:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:school:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[sum:time:qk]</rows>
        <cols>[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[sum:pr:qk]</cols>
      </table>
      <simple-id uuid='{F9BA812B-B65B-4D14-98ED-816CB1FE64F6}' />
    </worksheet>
    <worksheet name='Kingco'>
      <table>
        <view>
          <datasources>
            <datasource caption='data4' name='federated.015d84g0c83kjb163b3r50flwdsy' />
          </datasources>
          <datasource-dependencies datasource='federated.015d84g0c83kjb163b3r50flwdsy'>
            <column-instance column='[readableTime]' derivation='Attribute' name='[attr:readableTime:nk]' pivot='key' type='nominal' />
            <column-instance column='[time]' derivation='Attribute' name='[attr:time:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[school]' derivation='None' name='[none:school:nk]' pivot='key' type='nominal' />
            <column-instance column='[times Index (generated)]' derivation='None' name='[none:times Index (generated):ok]' pivot='key' type='ordinal' />
            <column caption='Pr' datatype='real' name='[pr]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.pr</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Readable Time' datatype='string' name='[readableTime]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.readableTime</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='School' datatype='string' name='[school]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>times.Value.school</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[pr]' derivation='Sum' name='[sum:pr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>times.Value.time</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[times Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>times.Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.015d84g0c83kjb163b3r50flwdsy].[attr:time:qk]' included-values='in-range'>
            <min>953.29999999999995</min>
            <max>479854.0</max>
          </filter>
          <slices>
            <column>[federated.015d84g0c83kjb163b3r50flwdsy].[attr:time:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.015d84g0c83kjb163b3r50flwdsy].[sum:time:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.015d84g0c83kjb163b3r50flwdsy].[sum:pr:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.015d84g0c83kjb163b3r50flwdsy].[none:school:nk]' />
              <tooltip column='[federated.015d84g0c83kjb163b3r50flwdsy].[attr:readableTime:nk]' />
              <text column='[federated.015d84g0c83kjb163b3r50flwdsy].[none:name:nk]' />
              <lod column='[federated.015d84g0c83kjb163b3r50flwdsy].[none:times Index (generated):ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.015d84g0c83kjb163b3r50flwdsy].[none:school:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.015d84g0c83kjb163b3r50flwdsy].[sum:time:qk]</rows>
        <cols>[federated.015d84g0c83kjb163b3r50flwdsy].[sum:pr:qk]</cols>
      </table>
      <simple-id uuid='{0B688169-0F5D-4856-BF59-DAB785B749AF}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='245'>
    <window class='worksheet' name='Hole in the Wall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:school:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:school:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[attr:name:nk]</field>
            <field>[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:name:nk]</field>
            <field>[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:school:nk]</field>
            <field>[federated.02vzxo0127x2gu1f8mcqi1r0nrxs].[none:times Index (generated):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEACF9F8-D4E0-4BA0-B1A2-BBC46F8B78F7}' />
    </window>
    <window class='worksheet' name='Bellevue Varisty 5/6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sajn4l1pseud01dgbmnu0cudq30].[none:school:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sajn4l1pseud01dgbmnu0cudq30].[none:name:nk]</field>
            <field>[federated.1sajn4l1pseud01dgbmnu0cudq30].[none:school:nk]</field>
            <field>[federated.1sajn4l1pseud01dgbmnu0cudq30].[none:times Index (generated):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{381D98EF-03CE-409A-AA61-A29F2B614DAF}' />
    </window>
    <window class='worksheet' name='Inglemoor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:school:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:isSr:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:isSr:nk]</field>
            <field>[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:name:nk]</field>
            <field>[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:readableTime:nk]</field>
            <field>[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:school:nk]</field>
            <field>[federated.01vipwj0hq1f7v1fgvz2v1451sq2].[none:times Index (generated):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47CCA54C-36DB-4A0B-9773-2F2F241787E8}' />
    </window>
    <window class='worksheet' name='Kingco'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.015d84g0c83kjb163b3r50flwdsy].[none:school:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.015d84g0c83kjb163b3r50flwdsy].[none:name:nk]</field>
            <field>[federated.015d84g0c83kjb163b3r50flwdsy].[none:readableTime:nk]</field>
            <field>[federated.015d84g0c83kjb163b3r50flwdsy].[none:school:nk]</field>
            <field>[federated.015d84g0c83kjb163b3r50flwdsy].[none:times Index (generated):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CA12734-7C3B-4E81-8DAD-804425560090}' />
    </window>
    <window class='worksheet' name='Hole in the Wall Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:name:nk]</field>
            <field>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:readableTime:nk]</field>
            <field>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]</field>
            <field>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:times Index (generated):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F64F7519-932C-40F9-A8E8-94C0B44AF8DC}' />
    </window>
    <window class='worksheet' name='Average Drop by School'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:name:nk]</field>
            <field>[federated.0as2fhp13wsbng1ez4be81qma69a].[none:school:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00D05E8B-DE0B-44E0-9552-85FD758AB3A2}' />
    </window>
    <window class='worksheet' name='Average Drop Overall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{11D10FF7-0581-4E12-9796-B8278F9C118C}' />
    </window>
    <window class='worksheet' name='HitW Avg (Without HitW)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kmffby0ov3f9419bs6771r3s02o].[none:name:nk]</field>
            <field>[federated.1kmffby0ov3f9419bs6771r3s02o].[none:readableTime:nk]</field>
            <field>[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]</field>
            <field>[federated.1kmffby0ov3f9419bs6771r3s02o].[none:times Index (generated):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DACCEEE2-32EC-409E-B926-A6EDDAC0E00E}' />
    </window>
    <window class='worksheet' name='Avg Drop by School (Without HitW)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kmffby0ov3f9419bs6771r3s02o].[none:school:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DE4997C-2C6C-488C-97C1-B89C3A579DE6}' />
    </window>
    <window class='worksheet' name='Bellevue Invite JV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12xugqo0esrp1e1gke4iz055kujr].[none:school:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12xugqo0esrp1e1gke4iz055kujr].[none:school:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12xugqo0esrp1e1gke4iz055kujr].[none:name:nk]</field>
            <field>[federated.12xugqo0esrp1e1gke4iz055kujr].[none:readableTime:nk]</field>
            <field>[federated.12xugqo0esrp1e1gke4iz055kujr].[none:school:nk]</field>
            <field>[federated.12xugqo0esrp1e1gke4iz055kujr].[none:times Index (generated):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BC948F6-750D-4386-A6E4-BEDB4064E216}' />
    </window>
    <window class='worksheet' maximized='true' name='HitW (Avg times before)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0c3het81i9l2ew1azc8dr1majmmb].[none:school:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c3het81i9l2ew1azc8dr1majmmb].[none:name:nk]</field>
            <field>[federated.0c3het81i9l2ew1azc8dr1majmmb].[none:school:nk]</field>
            <field>[federated.0c3het81i9l2ew1azc8dr1majmmb].[none:times Index (generated):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC580E59-39D2-45F7-92D0-64DECB38E30E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='38' name='Average Drop Overall' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAmCAYAAAB0xJ2ZAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE9ElEQVRoge2YTWgTWxTHfw4xmyhCsCIKUUsRJSJIQzAKg2hQKl0oCOJCcVEKpS4UpE0X
      ikKhglZFi4VgK7rwE7sIQrSmfhStIq2mmKY0NGALFmKJtTHSxHTmuBDzXknal/d4z/FhfjCL
      uf9zz5zzn3sn4c4TEeE3RjG6AKMpGmB0AUZTNMDoAoymaIDRBRhN0QCjCzCaogFGF2A0hhug
      6zqRSIQTJ06wd+9ePnz4kBPT2dnJpk2bCAQCs+bw+XxUVFTgcDiorKzk+fPnWd3r9eJwOLLX
      zp07s88x/TdtFU44HKatrY3q6mr8fn+OPjExQWdnJ9u2bZs1R3d3N729vbS1tbF06VIGBgZo
      bW1l7dq1WK1WJiYmuHr1Kna7PWeu4QasW7eOc+fOAeQYoOs6d+/eZcuWLYyNjc2aQ1VVVFVF
      Ub4vaLvdTmlpKdPT06TTaaampigpKck71/AtMBfDw8OMjY2xffv2OeMURck2D9DT04OiKFit
      VlKpFGazGYvFkneu4StgNr5+/cqdO3c4cOAAZrO5oDmpVIr29nYADh06hMlkIp1O8/LlSzo6
      OlAUheXLl3PkyBFUVQUMMMDj8RAIBLBYLFy8eJH169fnjXvy5AllZWWsXLmyoLyfPn3izJkz
      VFZWsnHjxuz4kiVL8Pl8wPctNTg4yPnz51m2bBllZWU/34BTp04VFHf79m2CwSCnT5+eMe52
      u3NyTE1N0draSlVV1ZyGKYqC3W7H6XQyOjpqjAGFcvny5Rn3Xq+X0tJS3G53TmxfXx8rVqzI
      2/yzZ88YGBhg3759LFiwgHA4zIsXL9ixYwfwC3wDAoEAHo8ne3/9+nUAent755zn8Xhwu924
      3W4ikQiXLl3i7NmzWf3HFnM4HAwODrJr1y4SiQQ2m426ujpsNhsA84qHor85RQOMLsBoigYY
      XYDRFA0wuoBCzgMAHjx4wO7du3E6nbhcLurq6kgkEgCMjIxQU1ODy+XC6XSyZ88eQqEQAPF4
      nOPHj7N582YcDgcVFRU8fvz4j8RiMG/fvpXDhw9LOByW5uZmicViOTHT09Pi8/kkGo2KpmmS
      SqWkpaVFLly4ICIir1+/lu7ubkmlUqJpmvT09EhNTY1MTk5KNBqV+/fvSzKZFE3TZGhoSKqq
      qmRkZERERAw34M/MZkA+3rx5I83NzXm1RCIhx44dk3g8nqNpmiaNjY0SiURERMTwv8J/l0wm
      QzAY5Nq1a9TW1s7QdF3n/fv3XLlyhTVr1mC1Wmfo4+Pj3Lx5E4vFwqpVq74P/vP39e/zVyug
      vr5eysvLZf/+/dk3+IOHDx9KeXm5bN26Ve7duyeapmW1/v5+UVVVXC6XtLe3Szqdzmo/3YAf
      TaiqKv39/TO0QraApmny7t07OXnypPj9/hw9Ho/LjRs3pKmpaUajIiLJZFL8fr80NDTI5OSk
      iPyPvwGxWEwaGhrky5cvefXGxkYJhUJ5Na/XK11dXSIiYvjPYCF8/PiRW7duEYvF0HWdTCbD
      o0ePEBHMZjMdHR2Ew2EymQy6rhMKhYhGoyxcuJCuri5evXpFOp0GYHR0lL6+PhYtWgT8wucB
      T58+pb6+nurqalavXk0ymeTgwYOMj48zf/58XC4XHo8Hk8nE4sWLaWpqYmhoCACbzcbRo0ex
      2Wx8/vyZlpYWgsEgmUyGkpISamtr2bBhA1A8D+Ab9bkp4+deg9oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Drop by School' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Drop by School (Without HitW)' width='192'>
      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
      1QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bellevue Invite JV' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bellevue Varisty 5/6' width='192'>
      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
      NgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='HitW (Avg times before)' width='192'>
      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
      eKr5/wknuwsMIbN3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='HitW Avg (Without HitW)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hole in the Wall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hole in the Wall Average' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Inglemoor' width='192'>
      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
      3f8HO0gkDqH1+fIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Kingco' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy96XObWXbw93uw7xsBcN8XkZIoitq33numZ8bj1+849mRslxO/ldgfnA/+
      F1yVPyCpSvwhcareKtvjifP2jD0zbU/vi9ZWq7VRoriLIAGSAAgQ+/ps+cAmWmqREklJFCU9
      v6quFgEc3AX3PPfec889R1BVVUVD4yVF96S+aKt6tB292ymZnSxLVdVt9d1u7r/nqc8NW5Ze
      B1mWURQFQRA2LaMoCjrd1vRvp2R2sqwXsX7PU5u2pADRhXkyJZn2Bi+zS0n0chm7t57mej8A
      er1+098lSRIGw9b0b6dkdrIsSZLQ6/VbenioqoogCFvq78ep34vW57Iso9PpEARhawpgNBpY
      icTIp2JUJZmWzj6UamlLhWto7Ca2qAAmGpta6GhtJJNOk00lsPsan1bdNDSeOltSAJfXj8u7
      +m+3x4Pb43kaddLQ2DGemBVIQ+N5RFMAjZcaTQE0XgpURUEMh1ElqfaaJEmaAmi8HGT/7ddU
      58NkfvkrVFVFlmXOnj2rKYDGy4FarWI7eQIEAbFS4ezZs+zfv19TAI2XA+uRw2Te/SX6vl4u
      XLrE4OAgwWDwybhCaGg8a9aWNRudqpt7eqC1lbNnz3LgwAH8/lXvhS0pQCmfIVtScNt0pIsy
      BqWCzePHZjY+mVZoaGyTO3fukMlkaGxsxGKxsLy8THNzM7Ozs/T09BAOhxkZGeGVV14hFoth
      MplYXFxE2Io79N3JMWIrBWxmCDY0U5FkUBRaW5o1Z7gdlNnJsp6XNl2/fp3Ozk5u3rxJpVLB
      6XQSDofp7OxkZGSEaDTKoUOH+OEPf8jNmzfR6/VcunRpawqQTSWYXVjGZRHIFkX0goLDE6Sj
      tbE2/WwWzTHrW5ntOMMpiqI5w90jI0kSY2NjeL1ezGYziUQCq9VKJBIhlUrR1tZGb28vNpuN
      mzdv4nA4EEVxawrwMDQF0BTgcWSeRlnlcplz585x9OhRPPe47WzbG1RD43mhUChw7tw5Tp48
      idvt3vBzmgJovHDk83kuXrzImTNncDgcD/2spgAaLxT5fJ5Lly5x+vRp7Hb7Iz+vKYDGc4uk
      SLw//lsqcoV3+n+PyOwC7733Hn/1V39VG/y5XA5FUbh9+zZGo5GjR4+SSqWwWq3Y7XZtE/ys
      y3rRNsGqqlKpVDCZTI80aX63HeuWpaqQy4PRCFbLfW/dWLiKUTDS4m3jw1u/I3o5QV1dHR6P
      h3K5zN69e1lcXKS3txdZlrHZbLz77rt0dnZiNBoZHR3VZgCNJ4skSXz44YcMDw+TSCRoamoi
      n89TLpcJBAIsLi7S2tpKsVjE5XLxySef8Oabb5LJZIjH47S2tpJIJDAajQQCAXyFMuQKUC5D
      byc4v13TN7tb+XjifUbnb5MOZXnnnXfo6enhyy+/RJIkZmdnsVgsWCyWmqK1t7djMplwOp0c
      O3ZMmwGedVkv2gxQLpe5du0aoihiMBhIp9PY7XbsdjvxeJy5uTmampp4++23uXHjBlNTU3R1
      deH1eslmsySTSdrb20mlUjQ0NDCg6KCzDVbSoNdBY/195c0tznH12lV+9PaPsFgsG9Tqfu41
      g2oK8IzLetEUQFVV7t69i9vtZnl5mfr6egqFAqFQiKGhIcLhMI2Njfh8PgqFAiaTiXw+j8vl
      4s6dO3R1dSEIAktLSwQCAVwWC4xNg9kEfV1wz7IqlUpx5coVXnvtNcxm86brqCnALirrRVOA
      7co8Sk5VVWRVRi+s9lUqleLatWucPHkSm822pXK0gzCN546v5i4SToexGM2caHiFf/75P/OH
      f/iHGAwGZFlGkiRisRhOpxObzVZ7oHz++efs2bOH+vp6jEYj0jc3wtbe35ICrCwvkSkpWPUy
      FdUI1Tx2bwN+r/MJN1dD437mUiH++OCf8ssv/4VL8xdxOByMjIxQV1fH8vIy4XCYQCBAc3Mz
      xWKRSqXCoUOHaGhoYHFxkf/23/4bLS0tmEwmHA4H1WqVdDq9tSXQUmSOucUkdW4LogwuXwBV
      LNPU1KR5g+6gzE6WtVvadGPhKjemr1GKVviLP/ifyOfyiKLIzMwMPp+PXC6H2+3GZDJht9sx
      Go34fD6+/PJL/H4/sViMSqWC0bjquu92u5EkaeveoEvJHFadRFk1oJNK2L0NNAZ92h7gMWS0
      PcCj5aLRKBMTE5w6dao2iLdb1rb3AKuBsfxbKkzj+eDy5ctYrVYOHDhALpfDZrPdp2CRSASH
      w4Hb7UZVVUql0gOuBqWRW1TGxjDs2YPj4NAjy5SKIaorX6C3tGKqe4Pr169TX19PW1sb8G0U
      52g0ytTUFENDQ5RKJfR6fW2mEEWRarW65Y3wGtomWAOAuro6bDYbCwsLTE1N0dDQwMrKCpIk
      cfToUc6dO0dTUxNOpxO9Xs+dO3c4dOgQc3Nz1NfX09jYiOnOHdz//U9J/eL/hXsUQFVVVkpF
      9IIOt9XK2lxXXfkCa/OfU4m/hyqmiEQiFItFwuEwZrMZURS5cuUKyWSSv/7rv+bKlSvEYjEO
      HjyIKIpkMhlMJhNWq5Xl5WV6e3sxm800NTVtut3apXgNAHQ6HVarlcuXL+N0Orlz5w7T09O4
      XK7azDA9Pc1XX33F0tIShw8fZmRkhJGREVRVJRAIIJhM5D/5dxTxLmLmRu27Q+kV7sSjXFuM
      EM1mvy3T3EBl+Xco1QSCwYkgCJTLZTweD3fu3OH27dsUCgXeeOMNDAYDLS0tDA0NMT4+zrVr
      16ivr0cURZaWlrh58ybLy8skk8kttVs7B3jGZe2mPYAsy8zMzNDX17dpmfvqpSgUbv8/WAb+
      C9Xoz7G1/gUAX0Xm6fT6KIkimXKZwYbGb9tRXUZn9CDoTKuBqgQBQadjbm6OhYUFTp48+dAN
      9b31m56epr29/b49wkbt1M4BNB5Ar9ffN/i3jCCgr3MgrnyMoP/WLWG4sZlL8yH0Oh0nWtvv
      +biA3hwEVpUhfHcGRVVIrqSQVB45+L9LT0/PlqusKYDGE0MQBCxNP0MsLWG0fhs236jX82pn
      90NlZVkCAQxmG6HZa/zRz/5kW6bUraIpwEvId5era9aWewfc2muyLN+3BKpUKt8uH9ZZGgmC
      DsEQIJtO43C5WZwPUSmXaW7vwGrb+IKKXm9gcWmJyHyY1998Y0cGP2gK8FIyNjaGKIq0tbWR
      yWTIZDJUKhX0ej0tLS0kEgm6uro4f/487e3tlMtl2tvbUVWVf/iHf8BoNHLo0CEMBgMej4di
      sUhTUxPT09McPnyY0NQEHl8d4dkZ6gL1NPd1MDs1QXf/3nXro6oq09PToDfyx3/6Zzs2+EFT
      gJeOUqlENBrFYrHw6aefcujQIcrlMplMhqmpKfbv309dXR2qqpJMJnE4HFy7do1MJoMsy3zv
      e9+jWCxiMq1uWsvlMlNTU4yOjrJ//35isRiKouCvbyCdTJDLphHFKg7X+hfTVVVlcnKSbDbL
      sWPHdnTwg2YFeuZl7bQVaHl5GafTSTQapaGhAavVyuzsLD6frxZNTa/X1wZ4MpmkUCjgdDqR
      ZRmfz/eAy8Li4iJerxebzYZOp6OQzbCSXMYfbMThdCJWCxiUKHpbF4LuWwuNqqpMTExQKBQ4
      dOjQA8utzbbpcU6CN6UAtbiLOgFJVtHpQEVAVWT0eiM6naApwGPI7BYz6NOQUVWFUuQfMDj2
      IBXvslQ+wfj4OEeOHCGRSLCyssKJEycQRZHFxUU6Ojr49NNPaW1trYU5XFhYoK2tjWq1itFo
      pFKpEI1GaWxsRBTF+65fGgyGJ28GlSpF7i7EselVUoUqdhOIioAiS1gdHjpam75prJYseyfK
      Wtug7ub+q8moCiBgdB9Gyo9TqVRQFIX/+I//AFZnj0wmA6wOTL/fj9/v59q1a3i9XsLhMFar
      lVwux29/+1v279+P1WqlUqlw9+5dJEmqXa9Mp9PYbDZ+/OMfP7JuW0qUrTdaMOsFZBVsZiM6
      vYBRFsFkQ1CV2hNpK2zVe3QnZXayrO3IrP2Az0efCxjcR8jN/RyL/zQ+o4tPP/2U7u5uXnvt
      NS5fvkxnZyd2u51EIoEoirS2ttauN/r9flpaWshms5w+fZpgMIhOpyMYDJLP51FVteaTFA6H
      sdvtj+yXex8gm1oCVcsFovEV6up8VEQFq1FFwoRSLWBxeDAb9doS6DFkXuQlEMD82E2SkRCK
      qqAPdqDXGxgcHHxm9bt3CbSpLbfJYqetrRW73Y7P48Rqd+G0W3B76zAbt/YjaOwuFEWpWXju
      fW2j56Isy2QyGURR3PTSaHl+moNv/yei6QJSpbzu4H9WaGbQl5x4PM6VK1cYGhoim81iMBgQ
      RZF4PM6BAwcwGAzEYjHcbjf5fB6DwcDExAQul4vm5mZkWaZQKOD3+4lEIrS0tBCJRDhy5Eht
      VmvuG+Rf/q//HYfby+FjJ55xi+9HUwANgFoCiZ6eHlRVpaGhgcnJSQBGRkZobW1lYGDgPplQ
      KEQoFGJwcJDp6WkEQeC9996ju7ubSqWCxWJBVVUWU3kGz7xFn34eafpjDD1vEQrNUS6X6e/v
      rynKmrWxVCphs9lq5teniaYALzk+n4+2tjYaGxtpbm5Gp9PhdDqxWq0IgkChUKCtrQ2z2YzP
      56stgTo7O6lUKvT19eH1epEkiV/84hf86Ec/olAo1IJRXb16FbvdTq8uhOBsgnIWee4SxaIH
      RVG4ceMGxWKxdipdrVaZmpriJz/5Se0Sjk6nq4VaWVpaYmhoiIaGhifSfk0BXnJMJhNDQxvf
      3tLr9fh8vtrfBoOBgwcPrvvZv/zLv0RVVaqZEUrR9xgJefDV1dPb24t0N45aTKJW8+g8q4Gv
      stksqqoSiUSoVCoEAgGi0WjNjj8xMUFfXx+xWIzGxkaKxSJdXV2USqUn1n7tJPgZl/WiWYGU
      6jKF2CfcmnXiMc2x98Rf1+oshy+DwYyh6SDwYHvXK2txcRGHw4HL5Xoi9YNtWIE0dheSJNVi
      4dzLmiWnWq2SSqVq1px7LTwAqiwiL91EreafeN1UDHx99RZ+r0BXx7dXEwVBwNB2AkPTMOsN
      /o1oamracPA/CbQl0HPIxMQEqVSqtslsb29neXmZeDxOR0cHdXV1fPzxxwwPD6PT6bhz5w5D
      Q0PMz89z5MgRGPlH9L5uqjOfYTr5vyDon0yWT1mWufz1GM29P6SjSYfRc+yJfO/TRFOA5xCT
      yYRer2dqaorWb3LfxmIxTp8+TaFQwGAwsHfvXubn51lYWGBwcJDJyUm8Xi8rKyv4qkX0bSeR
      ExMgV+E7CqBkFxBv/wrB6kW3/6ebqpMsy1y8eJHW1lZaWlq2tex8Fmh7gGdc1nb2AOVyGUEQ
      KJVKJJNJ/H4/6XSa+vrVyMn5fJ5oNEpdXR16vR6Xy7UaBEoQVh3HchGkqQ/RNw1jaH3wKV25
      /H9jOvTnSKHzqPZ6TE0HHlofWZa5cOECXV1dtLS0rHqdFuPciHzN4dbjBJ31D5W/ty92pTeo
      IousZPI4LXoS2QoOE5RkPTqpiM0TxGE1aQrwGDK7bRMszZ5FWbmLUlxBf+i/YLR7N/ysLMuc
      P3+enp4empubARAlkXdv/jM/3vcT3hv9V/7k8P/4ROv3uDJb9gZVlNVASMW8hKqoGJw+yrE4
      gslKKR7F+k2i7K1MJoqiPLCJ2y0yO1nWVh3a7pXb6uS96fq1ngJvHzqTDdVg2VBGURQuXLhA
      T08P9fX1tc8p8mrdkoUEIGy6T3ayz9f6blMzQKWY48atMfx1XvIVGaNcxOoJUsquYPcGaW9u
      0GaAx5DZbTNApVxm/u40AhBoasbteXAGkGWZc+fO0dfX90AgKkmSKElFRqMjDDYexG5+eKbG
      rdbvcWW2PAOYbU6OH19vR9+ypYI1ng9SyQQNzS2YzBYWw3P3KcDY2Fjt2uPAwACNjY1ks9kH
      TJUOsxPTio0VfQp76/0KsN2H0tNgd9TiJWe9q4CiKNbi2ev1+g2f+KVSiUKhgNfrRafTbeta
      4XfxB+sJTU+iqipNbR33vdfa2soXX3zBkSNHSKfTTE1Nkc/naW5uZnl5Gb/fz8LCAt/73veQ
      JInp6WmmpqZqIQzj8TjVapXOzk7i8Th+v598Ps+ZM2ceq87bRVOAXcDY2BjlcpmOjg6y2Szx
      eBydTkdrays3btzg9ddfZ3Z2llQqhc/nQxTFmoXHYDDw2WefMTw8jMFgIJPJ0NjYyNLSEg6H
      g2QySSAQwOv1UigUKBaLZLNZBgYGNsyjazAa6RnYB3Df+rparXLhwgUOHjxILpcDVpdjXV1d
      VKtVstks5XKZgYEBKpUKxWKRAwcOkEgkOH/+PJ2dnUxOTtZSlRaLxVryvGeFZgZ9xmWtrKxw
      /vx55ubm6OnpYe/evbz77rvs27cPp9OJTqdjaGiI69evYzKZMJlMjI+PIwgCDQ0N7Nmzh3A4
      TCaTYWlpCVEUCQQCJBIJ9u3bh16vR5IkcrkcqVSKI0eO8Omnn7J//36OHXv0QdVam6rVKufP
      n2doaIi6ujomJyfp7e1dd++y2/tcyxG2i8oKh8PU19fXsieazWbm5uYIBoO1sCP19fWUy+Xa
      xe94PF5LBWQymSiXy+RyOXQ6HQ6Hg0qlUktRujZAo9EoLpcLt9tNOBwmGAxuKqS4JElUMnc4
      +/l7HD3zp9QF28lkMrhcrvtClBsMBrLZbG1Wubcf1pZzT6P/NAV4CjI7WdZOWoHK1TJz6Vn0
      Oi/RfJGhxiac5oenFs2mo1z48P/g2Ov/MzbxIgnlVRYWFggGg7WBPTs7y+uvv84//uM/8v3v
      f59wOExTU1PtAvzS0hItLS3Y7faHujHv2iuRGi8G74/9llQxy7sjH7GvPsil+dBDP18qlfjy
      y68Z2teG21YGnRlJkvB4PMzNzXHu3DlisVjNAtTf389HH33EtWvXGB0d5ezZsySTSaxWK599
      9hkzMzM70MqtoW2CXyLKUpm9Dfv4Ynaa5UIOg27jGaRYLHLhwgWOHDuF215FLoaw1P8BHYKh
      dgtsYGAAj8dTiyvq9/sZHh5mdnYWv9+Poii43W4URaGjo2PLM9ZOoC2BnnFZO7kEWkiF+Tpy
      mRZvHxZjkF5/AEVWMeh1GPTfLgaKxSIXL17k+PHjWK3WF67PtfwALyn1zkb+YPCPan+PzS1z
      YzqGKMn8vvMqNoqIff+ZS9fHGD5yBJvdjrpNV43nBW0P8BIzGlrmP5/Zw74GI+eEQT7Q7eX9
      X/xvBHp7uJFc5sPpCaqyTKVS2VTqocuXL9fW+UtLS0+7+k+ETc0AYrlAaCmB0wjLuQrdzX5m
      FxPolSp2T5DWpuDTrqfGFlGBVLFIUazS7HKvu8Q6ua+Fd7+4gwmR1tSvySZK6AZPE62Weau7
      j8nEMvF8Dr/ZwujoKF9++SV79uyhubmZcDiMyWTi9u3bHD16lAMHDpBKpbDZbExMTHDnzh1M
      JhMWi4VgMMjw8PDOd8Im2PQeYGlpCUmSUBWFZCJOuSrS3N4Fkkhzs5YoezsyH330Ee3t7dTV
      1eFyucjlcuj1epxOJ7/5zW/o6+ujsbERh8NBsVisRW0uFAokEgna29upVqvIsozFYqlFYyiV
      Sgg2KyOxJbxWG3pBYH+woVa/QnqFyStnMZot7D39PfKFAv/03r+xZ3AvOoeXfcF6bkYXMRsM
      nGxu48pXX+FwOFhYWKC5uZlcLsfi4iLd3d0UCgU6OjpobW1lYWEBv9/PBx98QCAQoKOjg0wm
      Qz6fX72Jtgv6/Lsym/YGnQ5FaAgGKFQk2pobyOWy5NIr2L31uB1WbRO8DZnbt2+TTCa5evUq
      7e3t6PV6bDYbb731Fn//93/P0NAQ6XSaUqlUC1bV2dlZC17V0NBAOp0mmUyi1+uxWq0Eg0Gy
      2Sx9Rw6TLpdocXsYi0c53d5FdeEGxEYYW1IZePOPic/PUCiViSSznDx1CkkQcJjN6O55kK3X
      JlmWURRlw8OtNZlSRWR6YYW+1jrMxk3cQ9AOwnaHzE6VdePGDWw2G8vLy9TX1+P1ehEEAY/H
      Uxv4s7OztLW1kUwma+lI7XZ7LYCUx+NhZmYGu91OIBBgcXGRQqHAkaNHubm0QL5a5WhLG2a5
      TPXaP2Ac+hmLv/1fSQbeIrEco2z18+b3vo/Van2i/aDX6/mnD0cY7K7nTmiZP3370eEQNSvQ
      S8bBgweRJGldn5q1WDxrt6zWsqfDg2bQe9fXXu+3rsvDTavu6lVJYjFVIrui0JuJEOgYQNc0
      SKxq4M3XXttw8D8Oa4/V/jY/IzOxJ/79TwpNAXaYcrlMtVp9ZKiPSqWyeoHd56tlTf/ukkNS
      FK4tRrDoDQw2NK67BwtnUnwxMcv0bIrDrW+QvDnOnoM/YvzOJK++/notDPmTRqcTOLm/lfcu
      TvLaUPujBZ4R+r/927/92yfxRd/NMvgoXtZN8MWLF7FYLExMTCAIAiMjIxgMBmZmZsjn85TL
      ZUKhEB6Ph08//RSPx0MoFOL27dvodDqmp6drDnDjqRWanC6qiky2UsG3jnPbzaVFmi1edHqB
      Or+d2WWBcibGmTNnMJvNW25TOBxmbGyM5ubmdRUuk8nUMrb4XFYG2v3M3Z1EEAQcDgeZTGZd
      pVtLdLGZOj2sfptBVdXV9b+2BNp5BGH1jmw+n+fzzz9n3759RCIRrFZrLXHE2jq/vb2dcDhM
      oVDAbrczPT3N9PR0bY1tb28jUSxSqFZoX+faIsD++kYuh+fIFMtkR9O02CucOfMaJpNpW/Vf
      WFhgcXGR0dFRZFlmamqK3t7eWjiWbDaLKIrU19cTi8V4++23mZubw+FwcOfOHYrFIo2NjSws
      LNDY2FjLSyZJq/nIXn311S0rweOgKcAOMzw8TKlUore3l5MnTwLUnkZNTU01l2agFkc/nU4D
      YLPZ6OnpoVqt4vf78fl8hFbieJQFGm3rK4DPZuOHewaIe+PcunWLV17Z/uCHVTdnRVFqpteZ
      mRkGBgaoq6sjFAqh1+spFovEYjF6e3tRFAWfz1c7IOvq6kKWZUKhEA6Hgz179tSS9OVyOarV
      6o4qgGYFesZlPa4vUGnpVxisbYi5W1ib/gRB/+DyIhqNMj4+XvPt2Wr9XrQ+19yhXyBUOY/e
      MYCgt6Mq1QfeX1hYYHx8nFOnTj2wiS6LZT6a+B1Xw19tO7nf846mAM855uAPqcT/HYO9D53x
      fstSJBJhZmaGM2fO1JY98bkZbp19n0ImxefTHzPYOEShkmcuFXoGtX/2aArwnKM3BbA2/RSj
      +/6Y/ZFIhFAoxOnTp2tLBLFcYmHqNr2HTzP+5WfYTQ4WswukSimsxid/FvA8sCkFUFV19Xqb
      JFIslZHEKoVSmVKxgCS/2O6yzxuqqjI/P08oFOLkyZP37ct0ej2yKJKOL2Ewmjjd9Spmg4Uj
      rcc2Hb/zRWNTm2CxXCS0tIxFUMiVRXRKGZcvSC6TwWS109HaXNtYbJatbpp3UmYny1qTEaoi
      qunhF8cVWUb4po83OneZn58nEolw/PjxB+oiyzLVYp7EwhxN3QPoN3FR/UXs83vPDja1fdbp
      DSjVCpLRgE4ngAyxaBSH3Y6gbj87+ovI559/Xrsw3tTURCAQYGpqCo/Hg9PpJJfL1ZI5F4tF
      vF4v+vFpVpNGqLBvT+27VFVFEkUMRiOFXI7YYgSAzr49rJdk4u7du0SjUU6cOHGfciiKwvnz
      52lvb6e9vR3sXlRB4LPPPsPn89VSJK3lHHgarhG7iVqS7M0ehKmqgtfrxeVyIkoKFqNARQJB
      ETFZV5OYaSfB3wZq1el0VCoVIpEIgUCg9lSOxWL4/X6SySQOh4OlpSV+8pOf4K+KCIcGEa7d
      gnue8OG708Dq0gUV2rq6WY4uIVarmMyWWv1UVWVmZoZEIsGpU6c2rPfi4iIjIyPYbDYaGhrI
      ZDIYjUb+7u/+jv7+flZWVrBYLMTjcaxWK1arlf7+ftLpNAaDgWPHjm3KXLvbTt+/y9pY3bQC
      GEwWgsFV+/KaldloBnixnxTbYS1QbFdXFzqdjsnJSYaHh5mYmOCNN97AYrGQTCZrAaysVivU
      eeHardX/f4OqqkiSRNeeAWbGR2nt6iF8dxqT2YLZYq3NumuDf2VlhWPHjq07GFRVxWg0YjQa
      MZvNNDQ0oNfr8Xg8WCwW+vv7sdvtSJJEMBikubmZfD6P2Wxmenqa1tbWF3ZW0A7CnnFZGx2E
      qapKbHGBfDaD2+sl0NB033trT761wX/kyJENn4Sliohep0MnqFqfswl36NtXz3I3JPLOf/cW
      O3corXEvgiDQ0NwCzRtH4J6enq6FO9xo8E+EE1yfjFKVZH58sgefS/N+uZd1e81oMDAXX2D3
      RXF5CVBV8qkkS3fHN0yeoaoqY2NjZDKZhw5+gLFQgh+f6mO4t4GZ8PJDix6LjfLvo/9GupR6
      rCY8T6zbc5lshaF9fWi2nZ2nXMwzfvkzpGqFya++eOB9VVUZHR2lWq1y+PDh+zbCUn4CuTQP
      9/xyp/a38u6nI1y+OooauUF8bv3obLlylsn4GK/2vMnHE+8/lbbtRtadD3U6HQadYQvZXDW+
      i1KpgKqi2+KFE7FSxu724fY3kI4t3vfe2pNfURSGhobu2zeI6cuochFFTGFUFQy2DgCCXjvf
      32NDlky4/PuIjN8k2N79QLlGvRFVVVnOxx/I6BKbXGBlLo670UfjvrYtOe7tdh6YAaRqAbPV
      vZrn6VnU6AVASibJ/upfyf7mt1Tn57ck6/T6adkzSD6dZN8r36+9vvbkd7vdHDiwXtZGFQTd
      6n/f+eUau/sRyyXC4zfpO/bauuVajFZ+f/9PCNiD/KD/x/e9tzIXp//tg2Rj6RcuUNYDM0D4
      9hgrkoLNYtZmgG1SnZzCduokepeL4ldXMN1zn/eRCAJOXwCn79ukEaqqMjIygk6no7m5ed2D
      R6PnBFJ+HL21A4Pt/iuIgqCj6+DxR1pM9DoDTsuDVzW9bQHGP76Bq8FbO4l+UW9VHN0AAB60
      SURBVHjADJpcWMTaUI+Z1QOYzSqBZgb9VkYplcj9+3+gyjLOH7yD3u1+qMzD7gOoqsr169cx
      m83s2bOHCxcucODAAVwuV62/y+UyFosFWZbJZrMIgoAoitjt9vtyALzIfb4VtLAou6ishymA
      qqpcvXoVh8NBf38/5XKZ+fl5lpeXa4Gp4vE4TU1NrKysoNfrcbvd5PN5ZFnG7/cTj8fJ5/Ps
      3buX1tbWB+o3OTlJIBDAbDaTyWRqoVnW/j0zM4OiKPfNPGu5yyqVSu3vNXm/379qX9/Ffb7l
      sChiucDs4jJOEyxnK9gNCiIGVLGM3ROkrfnl8iTMZrNcvHiRQ4cOrRoMvvkBSqUSbrebbDaL
      1+ulUqkQi8Xo6OhAEATK5TL5fB6Hw8Hc3Bx2u52WlvXt/GuD3+Vy0dfXB6yeDdy6dYvW1laW
      l5ex2Wzs3buXWCxGLBajsbERk8mE3+8nl8tRKpVobGxEVVWKxSKlUgmn03lfGcVikX/5l3+h
      vb2daDRKX18fgiAQCoV49dVXmZubIx6Pc/v2bYxGIxaLBbN5NU9AKBTixIkTRKNRDAYDkiTR
      1NREf3//0/8RnhBbC40oiqiqSrmUpyqpuLx1IEsvXWjESCSCTqdjdnaWUqmEwWDAarWSzWZr
      gz+Xy3HixAlWVlbo7u7mo48+wul0IkkSgiDgdDrJZrMcOnQIj8fzQBlff/01breb3t7eJ9au
      78qk02kSiQTVahWr1UoymcTn81EsFpEkie7u7lqSvFwuR6FQqLl6CILA+Pg4kiTh8/lwOp04
      nU5UVa3lNtsquzo04sxchIZgkEJVxqaXqahGdFIRmyeIy255qZZAiqLw9ddfEwgEyGQytLe3
      IwgCsiwjSRIzMzP09fVRV1fH3Nwc2WyWWCzG0aNHgVWvy1KpREtLS+2puvbwUBSFK1eu4PP5
      Nhz8TztR9rOQ2cmytD3ALirr3j2Aoih8+eWXBINBenp6NpS5VwFEuUpVrmI3PTobu9bnq2ih
      EXchiqJw8eJFWlpa6Ojo2JRMoVrgN7d/idVoo9ffh5IQmJ+fp6OjA6/XSzweR6/XY7FYiEaj
      DAwMYDKZKJVK2Gw2stksPp+PfD6PzWajXC4DUFdX9xRburvQFOBpoKgwEwJZht5OeMTMqKoq
      Fy9epL29ndbW1k0Xs5iJsCcwwN6GQT4Yf4/mSgd2u525uTmKxWJtlqhWqxw9epRz586thgLR
      6SiXyxiNRorFIjabDUVRcLlcZLNZ3nnnncfsgOcHTQGeBgtLYLOCxQx351eVYAPWlj1tbW21
      wZ9YCBG69TVWh5u9p9/e0LjQWdfN7+78lunEBK/1vIVRNKOqKvl8HrvdXrv4YbFYuHnzJq2t
      rRiNRvx+f23gZ7NZkskkHR0dlMtlUqmXxxEOXrD7AKlUimq1SjC4mrGmUqmgqiqyLNeirQEk
      EglkWa4FnV27HudwOGoXPx4oSxRhahYEAYolMBhg/577nu41mcQKxJbBZASrFVoaN2zPhQsX
      6O7uvi/W5tUPfsmh7/8hk1fO0dQ9gLMucJ+ctgl+PJkXdg8wOjqKIAiMjY3hcrkQhNU1sc1m
      I5fLUV9fj8PhwGazEQ6HkWUZt9uNJEkYjUbsdjtTU1O0trbW4lmaTCba29vpKFZXB/LtCeju
      AEmCeBIa10kP5feBXgeyct8tr3tZG/wdHR0PBJqta+7g1he/o1ouYjt86in1lga8YEug+vp6
      0uk0CwsLlMtlbDYbqqqSzWbR6XS1maGpqalmw1/LaG4wGCiVSqRSKYxGI729vej1eqLRKOFw
      mI6WdkimVgd2KLz6/8GHHPh4v7Xtq5KEUiqhczhqwXHPnTvHwMAAfr//AdH2fYeolosYTZbV
      +8AaT40Xagn0pGTWlVNVWE6C2QxWy6oCfKe965WlShKZd3+JzuFAX1fHpMXM7Owsvb29DA4O
      kkgkqFQqNDU1PbDWn5mZIRqNsnfv3vsSX6iqSjKZxGaz3efrs+U27SKZnSzrhV0CPVUEAYIP
      Pq0fhZxKY/D7sb/1Jsl//gW3ZAmbzcbi4iK//vWv2bNnDx6Ph8uXL+P3+5mZmSEYDFJfX08g
      EKBcLvPhhx/S1NSE3W7ngw8+4NSpUwiCwNLSEu+88866J8kam0NTgKeM3l+Hqigk/unnXJMk
      hg4N19wOhoeHaW9vR5IkBgcHiUaj9PT00N29emFFFEX0ej39/f0YjUY6OjqIxWK43W5UVaWv
      r+++WXd8fByfz0cwGCQSiWzoZ5TJZPjwww9544038Pv9jI6O0tTUhNfr5e7du8BqVAtYnYUc
      DgdjY2O89dZb981S8Xgcj8fzWOHWnzWbWgKpqkK5XMVsMlCVFHSqhPSNM5zJasdo0L/4S6B7
      KN+5Q3V6BtupkxjuWcNvJFOpVDh//jyDg4O1fci9Mo8THv3e195//30sFguiKNZSKo2OjrJv
      3z4uX77MiRMnEEWRH/3oR1y5cgW73c77779PS0sLHo8HWZbx+XyIosjZs2d58803URSFarXK
      4uIiqqricDgQRRGHw8HKygpOp5N4PE4wGOTQoUO1ZBcv1BJIqpRZjCVo8LtYSVeQqjkkSQZB
      h8Fkpb21qfajbJatfn4nZR4mpxQKlMcncHz/e+T+/T9w//EfPVSmXC5z4cIFhoeH8fl8D7y/
      FqVsK1uxtc/f+12yLNPYuJonLJVK4fP56OrqwmAw4PP5GB4epqmpCbfbXUtaIcsy+/fvp7+/
      v5Z72O/3UyqVOHjwIK2traiqSjQa5fDhw6TTaRwOB16vl2g0iiRJNDc309jYyNLSEiaTCUVR
      nnifP2mZtc9v2hdIqpYZn5qhrbWJcCSBxaQiKyqqyksXG1StVsn+6l8x79uLODeP88e/t6HM
      2pP/yJEjuDe4FLOd+q0pwL39LYkigk730O96Xvv8Scts2RtUFqtk80VMJiOiKGOzmVDRo0oi
      BrMFg173Ui2B5GwWMRzB3NeLcE+A2XtlSqUSFy9e5PDhww/dpD6JJVAmtUIiHkORZVo7u7Fs
      MuevqqpkChWcNhP6DR5eu6XPn6TMlpdAeqMJr3edjc4johk/r6RSKYrFIkaj8b41u6qqZDKZ
      1bCG+/ZuKF8sFvnoo4947bXXdsRCk1lZoaWjk3KhSC6T2lABvssHV2YQJYViWeSPX9+7Gvj4
      JUOzAq3D119/jdfrRVEUzp07R3t7O6Ojo/z0pz/l448/RqfTUVdXh8ViwWQyodfrKRQKlMtl
      crkci4uL1NXV7Zh5sr65hfDdGXR6Pe3d698hWI9EusiffW+QX50doyJKWM0v5gPtYWgKsA7t
      7e2k02l0Oh35fJ5QKFTLrzU8PEw+n2dxcRGbzUY0GgVWYyktLy8jiiJdXV07aho0Wyz0DOzb
      stxQTwM//+gWbfVuLKaXcyhoJ8FPSC6fz3Px4kVOnz6N3W7fUjkb7QFK+Syj5z9EEHQMvvYD
      TJbVU1/NGe7xZLST4MdB/cbXvyJCXxcYDeRyuZqdfSuD/1GEbl1h4ORbiJUS83du0HNo845x
      +Xyec+fOMTw8jKqqWK1WZFmmWCzi9/trJs+1i/tmsxmDwYDRaKxZrJaXl2vJPNbzWXoR0BRg
      q0TjYDJBoA5mQuSa67l8+TInT5587ATPqqpy4VaYUDRNd7OXge69jF36BFVVGTj55pa+q1Ao
      sGfPHqanp6lUKoiiiE6nw2w2c/HiRZaXl+nq6uLEiRPE43EWFhaoq6tjdnaWoaEhUqkUU1NT
      dHZ24nQ6ee219SPKPe+89AqgKgqVQgWzw7I5U6TVAssLUKmSrla48uWXnDp1qpZg4rHqAszF
      0vzZ9wb5+Ue3OLnvAAff/E8ggMG4tT1FMBjk+vXrtLa2kkqlcLlcyLLMxMQEb775JlNTU/T0
      9ODz+Thw4AAHDx4kmUwSDAbJ5/OcPHkSl8uF3+/flk3/eeGl3gOoisrkF7cwWkwIOoHO43s2
      JUc2x0oszrW5Wc6cOYPlmwC4j3spXlVVfntxEllWMBkN/N5JLSrE05DR9gDfIH8To6fzxB7G
      P76xabkVSeRGeI5XXnnlsZc99yIIAr9/qo9iWcRmeflMks+CFyvS6RbRGw3Y65yMf3yDQPf6
      1xa/SzKZ5MaNG5w+fXrTg39sbIwPPvjggSXSWiCtW7duMTo6Cqwqgd1qqi3HFhcXN/R1iUQi
      mypfY2M2HRpxYTlNnctCviKgl4vkKgpUi9h99TT417/2t9sRBIHmwQ6aBzs29flEIsHIyMiW
      Bj+sDvRiscilS5fI5XK1DI3JZJJTp04hiiKDg4O8++67NTfk2dlZJEmqLa+sVivT09OcOXOG
      cDhMOp2moaGBO3fu8P3vf/9hxWs8hE0pgNFix2zI4nR7yC+tYLPbUYQSkqUOsZRHll01L8DN
      spZSdCtsRkZVVX75y19y8ODBWnxOr9eLKIqk02ncbjflchmdTkc4HCYQCOD3+ymXy0xOThIM
      Brlw4QLvvPMOKysrRCIR9u/fz8rKCmNjYwwNDVGtVtddf29UP7fbTSaTwePxIAgCCwsLHDx4
      kHK5jNlsxmQycfv2bU6cOEEkEkFVVY4dOwZALBYjnU7j8/kwGAyEw2GMRiORSITTp0/XYnI+
      qf57VjI7Wda9Y3XToRHHp2apD/pZTmSxWQUMFidqOY/d10DA59o1m+BQKMRvfvMbDhw4wPLy
      MrIsY7fbaWho4Pz58xw9enQ1opooks/nmZ6epqenh+HhYZLJZO2yvNVqxeFw0NfXx8WLF7l4
      8SI/+MEPaq7Eg4OD225ToVDAZrPV7gdv1RmuUqmQz+e3HMBK2wSv8kKHRlxZWcHtdhOJRDCZ
      TCwsLNDR0UE+nycWi9HX14dOpyMSiWC324lGo3R0dFBfX082myWfz2OxWEgkEjgcDq5evUqx
      WGT//v00NDTUXBxcrgcTSTzp8OgboVmBHk/mhVaAJyGzJre8vMzk5GRtqfG06qcpwM6W9WKb
      QStVEFg9rX0MotEoMzMzmx78zxIlt4R48/8DvQHT4b9AMD05d4wXnRfLDJrKwOgE3BqHTG7b
      XzM/P8/U1NRzMfgBpKmPMR7+HzB0voYUvvysq/Ncsft/3a0QW151UJNkWE6A2/lome8QCoVY
      WFh4bgY/gL71GOK1fwJVxnjoz591dZ4rno9feLN0tcPt8dUYPvu3nqYnFAqxtLTEiRMntmTS
      fdboA3vQedtB0CHon98QJc+CF2sJZDLCoUEY3g/Gzeu2qqq1wX/8+PFd6fwVDof55JNPNlRM
      VWfio08+58aNG0Sj0ftOj+fn51+6qM+bZdfPAOFwmFu3btHR0UFbWxuyLJNKpXC73VQqFQqF
      Qi0pnMlkIhKJUCwWcbvdWK1WGhoaKBQKwKrFoFwu09jYyPLyMj6fD1VVSSQSxGIxjh8/vq3c
      VjtBPp9HFEXOnTuHqqpYLBZyuRyKonD9+nX+5m/+hlwuh8PhYHp6momJCSqVSi05X6lU4ic/
      +cmzbsauY9crwNqp6Keffko6na6d5oZCIfx+P++//z4nT55Er9dz9OhRPvjgA5qamqhWq3z8
      8cf09/fXFGdlZQVBELh06RKKotDU1EQwGKRYLO7qwQ+rp8lms5menh5MJhMjIyP4/X4UReHE
      iRPo9XpOnz4NrCa0s9vtCILA7OwsTU1NZDKZZ9yC3cmuPwfI5/PcvHmToaEhrl+/zp49e7BY
      LKTTaUqlEisrK/T396PX63E6nYTDYfR6PR6Ph1u3btHZ2YnL5UKn05HNZrFYLBSLRUKhEAB6
      vZ7Dhw8/YId/FjnCNsvak32r9461c4BVXvqDMFVVmZiYoFgsMjw8vO7g280KoB2EPZ7MthJl
      312I0+R3ksxK1Dn0zC4uY1Al7J4g7S0NW6rAs2Qzg1/j5WHT3qAumwWn20u+mCQ0F6ZQKtPU
      2gFyFVmWd4036KNkxsfHKZVKDA8PI8vyrqjfdthqf6/JaN6g9/fdphSgUsyRyWQRUMnmyuw9
      eIhKsUA+k8ZW11CbinfzEkhVVW7fvo0kSRw5cuSRT/7dvgQSBEFbAm1TZstLILPNSX//6n3Z
      hm8uTtlsdmy23elzoooipes3MLa1Ivj9qKrKzZs3MRgMHDx4UFv2aNTY9WbQ7ZB7/wPMewco
      fHEW2w/e4f/8r/+Vffv2UVdXRzKZ5OrVq9TX15PL5di3bx+JRIJsNksmk6Grqwu/30+1Wn2p
      Eka/rOxew/djoFar6KxWMBi4ee0aFouFlpYWisUiiUSC/v5+4vE4Op2OkZERPvnkE5LJJABf
      fPEFly5deq6znmhsnhdyBjDv3Uvm17/h1uIinjff4Pjx4xgMBgYGBjCZTMRiMbq7uwkEAoii
      iM1mo7Oz875bYNZNRljWeL55IRVAXIgw1dWJv6+Xdp0e1/Dwfe87nfd7id671Dl+/DjAYwe5
      0ng+eOGWQIqicNtoxHp3lrZMFuvRI8+6Shq7mBdqBlBVlcuXL1Pf2krXN7EstSe5xsN4LhXg
      d7/7HcePH2d2dhaXy1Wz6Hz55Zd0dnZSKpUoFovIskw+nyefz9cSTsfjcarVKuVymY6ODgRB
      eCBzo8bLw3OnAIqiEI1GuXHjBrFYjFwuR1NTE0ajEVmWWVhYoFgsks1mKZVKmEwmurq60Ov1
      jI6OMjY2RiAQoL6+nomJCRYXF/nZz372rJul8Yx47hRAkiR++tOfUq2uumCMj4+zvLxMMBjk
      5MmTWCwWVlZWCIVCHD58GKPRyMTEBIODg0iShNVqpbm5ueZR2tzc/KybpPEM2Vya1EqJeDqP
      22akJOkwKGWKsg61lMXma8DrtD0Tb1BZlrlw4QKdnZ20trY+sXKeVP02K6N5g+5sWdvIEmkG
      JY3F5iYbzxCNh3F6/OhMdvLpJC6beced4RRF4cKFC/T09NDY2Ljhdz0PjlnbQXOGezyZLTnD
      VcsFFhcW0aGwuJQi6PeRL1fRFXPYvfU77gwnyzKXLl2iv7+fhoaGhz49d/vTSHOG2/mytuUM
      d+TIYQAaGp/tmlmSJM6fP09fX98jB//DUBSFcqaI1WPXnONeYp6rTbAoily6dIm9e/dSX1+/
      7YGrKiqTn41gcdmQqxLOXj+/+93veO2113A4HGQyGZaWlmhtbcVgMGCz2SgUCvh8PmA13v9a
      kFy3243D4SAWi2E0GlEUhZaWlifZbI2nyHOjANVqlfPnz3Pw4EECgcCWZEuZAne/HEcQBHpe
      2YfeoEfQ6Wg/0svYRzdwAm+88QZTU1MsLCzQ19eHqqrE43FGRkZobm4mGAwyOTlJR0cHkiQx
      NDTEBx98gCzLmEwmvF5v7Z6upgDPD8+FAlSrVc6dO8eBAwe2PPgBlu6E6T61l2qxQnxykeYD
      HbjqPYx/fIP6Pc3kikUikQjNzc309PSQyWQIBAI4HA5cLhdms5mGhga++uor2tra8Pv9TE5O
      1hzqJEnCbrejqupzE01OY5Vdfyl+bfAfPHgQt9u9rU1SOVNk/utpVFS6T+3F4ny0p+du3wRr
      ZtDtyzw30aGr1Spnz55leHiYurq6bfv1OOpc9L99EAR2dewfjZ1n1ypAqVTiwoULHDp0qLb5
      fBi3bt2iUqkQDAZpa2t74H2dfnXgT0xMMDc3x6uvvlrLv6Xx8rIrFaBYLHLx4kUOHz6M17u5
      BHw2m41UKsWNGzeYm5vj7NmzDA0NoSgKgUCARCJBIBDAYDCQy+W4desWOp2O69ev4/f7KZVK
      nDlzZsMTZY0Xk12nAMVikQsXLnDs2DHcbvem5WRZxmw2c/z4cURRpFKp0NXVRS6Xw2Aw1LIv
      AjQ3N5NKpcjlcgwMDGC322lqatKuQb6E7CoFWBv8J06ceODW1qPo6+u77+81U+RGm6RAILDl
      zafGi8euUYBCocCFCxc4efLklgf/dtDMlRqwhUTZ4XiKgNtKrgRyOUVVNaJWC9i8DTQFH71J
      fRjZbJbLly9z6tQpHA7Hhp9bvBWikMhhr3PSOtytPb01HptNh0a0Gr9JlF1coVKpUpEquOuC
      yJUCsuzetjdoLpfjypUrHD9+HIvF8lBTZy6eZc9bB5j8bARZklYzwWyynK2ieYPurMxOlrWt
      0IjLiSQCKsmVHB63DYNqRC6msfu2HxqxUCjw9ddfc+bMGWw22yNlbF4702dHsbrs6A2GTc0A
      u/1QRvMG3fmynkl49GwszeLtOXxtfoK9zaysrHDt2jVOnz696Rg8kiShEwSEbyq/WZnd/GNo
      J8E7X9a9CrBjx6ILI7P0vT5IemGFRDzBV199taXBv4ZOs9xoPEF2zBRitJhYGp1nORZnrhrl
      zJkzWvQ1jWfOjs0A3acHqOhECm6ZM6+cIR1KMP7JDfKJLJIkcfbsWUKh0CM3dolEgkgkUvtc
      KBSqxfXU0NgqOzYDJJJJQvEwr7/5OqqoUE4X6Ht9kIlPRzB1uRgcHGRiYoLp6WkEQUBRFCqV
      Ch6PB51Ox/T0NN3d3eh0OkRR5MqVKzgcjtpnOzo66Onp0ZzdNLbEjoyWRCLBrVu3eOWVVzCZ
      TBjMRsq5Eou35zE7LASDQa5cuYLNZqO7u7vmVz84OFj7jrq6OoLBIA0NDbVbWM3Nzbjdbrq7
      uxkbG9MGv8aWeepWoFgsxujoKK+88gpGo7H2eqVYppIr4Qx4EHSPZ9FJp9PodDpcLtemZbZb
      1tOQ0axAO1vWjt0HiEajjI+PPzD4AfQmA676zXl6PgqPx/NEvkfj5eOpKcDCwgLT09OcOXNG
      87vR2LU8lZEZiUS4e/cuZ86c2fI0raGxk2xKAVRVIZsrYDPpSGRKuG0GqphQKnlsLh8W07df
      s7CwwOzsLKdPn9YGv8auZ1MKIFUrpDJZjD43+VyGSkmHKlXBaCVbWKSttQVFUYhEIszOznLq
      1CmAR+bhfdj7z1JmJ8tac4bb6iZ4O7YLrc9XkWW55k+1uRlAloktLVLJp5B0dgSljKjoUEpp
      bG4/giCQTCYJh8O88sormzJHqqq6ZbPlTsnsZFmqqm55plxTgN3af89Tn2/KDLpmdhMEYbVA
      QUAVBPhGiwRBIJvNYrfbN/1jaia5b2U0M+jOlvVUvEG3cx9gq5q7UzI7WdZ267c2hT/tsl70
      Pn9iVqCtVkIQhF0rs5Nlrc2gW50B1mR3on4vcp8/sRlAQ+N5ZMdOqMRKkenQIm2NfmIrORAL
      WFxeVqJL2H31dLY2PiikSIzemaK7p425cJTO5gBX78zgd5iQ9Vb6e7selAFSyzEKEqiZOI7O
      fhIzE1RkkGSR7oEhnOYHnxiyWGZiOkxHS5ClRBqdVKIoCwjVMmZ3Hd3t6wS8VWXGRyeob/Yz
      e3cBi81CqVzFaTUhCSb27ulet36ZlQSZokgxs4zeaqOYyRPw+4gnlunoH8ZjfbB+ilRhbDKE
      zQQFSUfQLhAvqci5LIG2bpoCD56GS9USU3cjeBxG4skcwYCX5XQWvSRi9fjpals/1H1kcgJ7
      cz2hyRAWi5lKqYjF6aZUKnNg/z70G7iu3Bm5gd7mopiKY7XZKYoSbZ0D+N0bByCLRULEVjKY
      rXZMFhtSfgXF6GBPT8eGMihVbt64g8sfJL8cxuENsJLJsXfffqymjfdF47dvgtmJVS9RLJYp
      SfLOuUMbzTa8Ljt2lwer2UCxWCQWW8Lp9oMsri+kMxCo82Cy2HE5bITDYarlMgaLA7Nx46q7
      fX6MOvD7/QCY7G78XjeN9XVUxPVNZnqjBZ/Hgc3pxmYxoTNZsZl12F0+dOoGZjZBj7/OiyiK
      NAT9iLKKTgCdyYrVvPEP4fb5MenB4nBhVMsUSyLz4UVamgKUq+uXpTOYqfO60Bkt2E0Ci9Fl
      cpkUdYEGJLG6rozBZMXrdiApAnUeB4qgp72tBYerDkHZ2HRYV+dHkKt4g42UCnma6v3kKype
      t4OHrRcCQT/ZXBqd3oRYLlPf3EilvH7d1vD5A1RLebLZPIlYHL3NwUO6bhXBiL/OSXxpjlSh
      zEo6T9DvQ3yEOTQQDJDN5dAbTDQH/dQ3N+7cDFAt5clksyAI5Aol2ju6/v92zq4ncSAKw0+B
      RqAWP8AygMFgomIiUfdif/lmr/a3bDbZC7SU8tFOWzul9cJN1ouiN94Q5rl/k3dOMic5kzMv
      cQaVLMY6EeWiTcoqCMj/vTINR2P6F4oskWyq2/8Q+94TMslJi5RKOiNNIlq9PlEQ4lhmqSZ7
      if77CyXirI2ihqEkB3a7VEOesQoDjjoOhYoYXw5xl5KTQxPFwVZ/c3dKmCjadoOa1afRdGmd
      dpnPXAZOub9cJayDENE9Iy2qjEaXxC+Kpe8hRHlitkokq/Ua0esRxSmVTcxiIbGbNRpHW84E
      +HJNYVrUjYzJwyPus8v9tYO3kFu7/xsGt+M7gvkTrY5g6c3oDz6PuBHDK7qnh7h+iF2vUJjW
      xwIDjKrJw7fvVNmQFwUzb4FdL6/de+H45hp/+pfEOoY41DOAZr/RC/SavUZfAM1eo/eUd4Rf
      P38g8xqPkwnnFwPdub4IXccdQjiC3388dCjM1/EKZAxz8orUwcgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
